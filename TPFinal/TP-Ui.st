BorderedMorph subclass: #PostularSolicitudServicio	instanceVariableNames: 'LabelDescripcion LabelMonto LabelFechaVencimieto LabelEsProlongado LabelPeriodo LabelProducto postulante solicitud'	classVariableNames: ''	package: 'TP-UI-PostularsePaneles'!!PostularSolicitudServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/14/2024 06:45'!postularse: unControlador	unControlador setPostulacionConPostulante: postulante Solicitud: solicitud .	self delete.	! !!PostularSolicitudServicio methodsFor: 'initialization' stamp: 'Anonymous 5/8/2024 21:49'!setSolicitud: unaSolicitud YPostulante: unPostulante	|lblDescripcion lblMonto lblFechaVencimiento lblEsProlongado lblPeriodo lblProducto|.	"lblEsProlongado lblPeriodo lblProducto"	lblDescripcion := LabelMorph new.	lblDescripcion contents:  unaSolicitud getDescription .	lblDescripcion top: self top + 10.	lblDescripcion left: LabelDescripcion right + 10.		lblMonto := LabelMorph new.	lblMonto contents: '$ ', unaSolicitud getMonto asString.	lblMonto top: lblDescripcion bottom + 10.	lblMonto left: LabelMonto right + 10.		lblFechaVencimiento := LabelMorph new.	lblFechaVencimiento contents: unaSolicitud getFechaVencimiento ddmmyyyy .	lblFechaVencimiento top: lblMonto bottom + 10.	lblFechaVencimiento left: LabelFechaVencimieto right + 10.		lblEsProlongado := LabelMorph new.	lblEsProlongado top: lblFechaVencimiento bottom + 10.	lblEsProlongado left: LabelEsProlongado right + 10.		lblPeriodo := LabelMorph new.	lblPeriodo top: lblEsProlongado bottom + 10.	lblPeriodo left: LabelPeriodo right + 10.		lblProducto := LabelMorph new.	lblProducto top: lblPeriodo bottom + 10.	lblProducto left: LabelProducto right + 10.					unaSolicitud EsProlongado ifTrue: [ 		lblEsProlongado contents: 'Si'.		"sereamos el peridio"		lblPeriodo contents: unaSolicitud getFrecuenciaPago asString.			] ifFalse: [ 		lblEsProlongado contents: 'No'.		lblPeriodo contents: '-'.	].			unaSolicitud getProducto ifNotNil: [ 		lblProducto contents: unaSolicitud getProducto asString.	] ifNil: [ 		lblProducto contents: '-'.	].				self addMorph: lblDescripcion .	self addMorph: lblMonto .	self addMorph: lblFechaVencimiento .	self addMorph: lblEsProlongado.	self addMorph: lblPeriodo .	self addMorph: lblProducto .		postulante := unPostulante .	solicitud := unaSolicitud .! !!PostularSolicitudServicio methodsFor: 'initialization' stamp: 'francozuniga 3/11/2024 23:47'!initialize	|btnCancelar btnPostular controlador|.	super initialize.		self extent: 400@250.	self color: Color gray.		LabelDescripcion := LabelMorph new.	LabelDescripcion contents: 'Descripcion:'.	LabelDescripcion top: self top + 10.	LabelDescripcion left: self left + 10.		LabelMonto := LabelMorph new.	LabelMonto contents: 'Monto:'.	LabelMonto top: LabelDescripcion bottom + 10.	LabelMonto left: self left + 10.		LabelFechaVencimieto := LabelMorph new.	LabelFechaVencimieto contents: 'Fecha Vencimiento:'.	LabelFechaVencimieto top: LabelMonto bottom + 10.	LabelFechaVencimieto left: self left +10.		LabelEsProlongado := LabelMorph new.	LabelEsProlongado contents: 'Es Prolongado?:'.	LabelEsProlongado top: LabelFechaVencimieto bottom + 10.	LabelEsProlongado left: self left +10.		LabelPeriodo := LabelMorph new.	LabelPeriodo contents: 'Perdiodo:'.	LabelPeriodo top: LabelEsProlongado bottom + 10.	LabelPeriodo left: self left + 10.		LabelProducto := LabelMorph new.	LabelProducto contents: 'Producto:'.	LabelProducto top: LabelPeriodo bottom + 10.	LabelProducto left: self left + 10.		btnCancelar := ButtonAction new.	btnCancelar label: 'Cancelar'.	btnCancelar top: LabelProducto bottom + 10.	btnCancelar left: self left + 10.	btnCancelar mouseAction: [ self delete ].		controlador := PostularSolicitudServicioController new.		btnPostular := ButtonAction new.	btnPostular label: 'Postular'.	btnPostular top: LabelProducto bottom + 10.	btnPostular left: btnCancelar right + 10.	btnPostular mouseAction: [ 		self postularse: controlador.	 ].		self addMorph: LabelDescripcion .	self addMorph: LabelMonto .	self addMorph: LabelFechaVencimieto .	self addMorph: LabelEsProlongado .	self addMorph: LabelPeriodo .	self addMorph: LabelProducto .	self addMorph: btnCancelar .	self addMorph: btnPostular .! !Object subclass: #PostularSolicitudServicioController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-PostularsePaneles'!!PostularSolicitudServicioController methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:44'!verificarPostulacionConPostulante: unPostulante Solicitud: unaSolicitud	"tenemos que verifiacar que el postulante no se postule a su propia solicitud."	|mensaje retorno|.	retorno := true.	mensaje := '', String cr.	(unPostulante esEmpresa) ifTrue: [ 		(unPostulante tieneSolicitud: unaSolicitud ) ifTrue:[			retorno := false.			mensaje := mensaje, 'No se puede postular a su propia solicitud.', String cr.		].			].	(unPostulante verificarPuntosParaSolicitud: unaSolicitud ) ifFalse:[			retorno := false.			mensaje := mensaje , 'La solicitud supera el monto maximo de trabajo para la empresa' .	].	(TrabajoAr estaPostuladoElPostulante: unPostulante ASolicitud: unaSolicitud ) ifTrue: [ 			retorno := false.			mensaje := mensaje , 'No se puede volver a postular a la misma solicitud.', String cr.	].	retorno ifFalse: [		( ErrorDialogWindow new text: mensaje) openInWorld.	].	^ retorno .! !!PostularSolicitudServicioController methodsFor: 'initialization' stamp: 'francozuniga 3/13/2024 00:05'!setPostulacionConPostulante: unPostulante Solicitud: unaSolicitud	|control|.	control := self verificarPostulacionConPostulante: unPostulante Solicitud: unaSolicitud .	control ifTrue: [ 		TrabajoAr addPostulacion: (PostulacionServicio new setServicio: unaSolicitud Postulante: unPostulante).				].	^ control.		! !BorderedMorph subclass: #PostularSolicitudTrabajo	instanceVariableNames: 'solicitud postulante LabelDescripcion LabelFechaVencimiento LabelMonto LabelAptitudes'	classVariableNames: ''	package: 'TP-UI-PostularsePaneles'!!PostularSolicitudTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/14/2024 06:45'!postularse: unControlador	unControlador setPostulacionConPostulante: postulante  Solicitud: solicitud .	self delete.	! !!PostularSolicitudTrabajo methodsFor: 'initialization' stamp: 'Anonymous 5/8/2024 21:48'!setSolicitud:unaSolicitud YPostulante: unPostulante	|lblDescripcion lblMonto lblFechaVenciminto lblAptitudes |.		lblDescripcion := LabelMorph new.	lblDescripcion contents: unaSolicitud getDescription .	lblDescripcion top: self top + 10.	lblDescripcion left: LabelDescripcion right + 10.		lblMonto := LabelMorph new.	lblMonto contents: '$ ' , unaSolicitud getMonto asString.	lblMonto top: LabelDescripcion bottom + 10.	lblMonto left: LabelMonto right + 10.		lblFechaVenciminto := LabelMorph new.	lblFechaVenciminto contents: unaSolicitud getFechaVencimiento ddmmyyyy .	lblFechaVenciminto top: LabelMonto bottom + 10.	lblFechaVenciminto left: LabelFechaVencimiento right +10.		lblAptitudes := LabelMorph new.	lblAptitudes contents: unaSolicitud getAptitudes .	lblAptitudes top: lblFechaVenciminto bottom + 10.	lblAptitudes left: LabelAptitudes right + 10.		self addMorph: lblDescripcion .	self addMorph: lblMonto .	self addMorph: lblFechaVenciminto .	self addMorph: lblAptitudes .		postulante := unPostulante .	solicitud := unaSolicitud .! !!PostularSolicitudTrabajo methodsFor: 'initialization' stamp: 'francozuniga 3/13/2024 23:58'!initialize 	|btnCancelar btnPostular controlador|	super initialize .	self extent: 200@200.	self color: Color gray.		LabelDescripcion := LabelMorph new.	LabelDescripcion contents: 'Descripcion:'.	LabelDescripcion top: self top + 10.	LabelDescripcion left: self left + 10.		LabelMonto := LabelMorph new.	LabelMonto contents: 'Monto:'.	LabelMonto top: LabelDescripcion bottom + 10.	LabelMonto left: self left + 10.		LabelFechaVencimiento := LabelMorph new.	LabelFechaVencimiento contents: 'Fecha Vencimiento:'.	LabelFechaVencimiento top: LabelMonto bottom + 10.	LabelFechaVencimiento left: self left + 10.		LabelAptitudes := LabelMorph new.	LabelAptitudes contents: 'Aptitudes:'.	LabelAptitudes top: LabelFechaVencimiento bottom + 10.	LabelAptitudes left: self left + 10.		btnCancelar := ButtonAction new.	btnCancelar label: 'Cancelar'.	btnCancelar top: LabelAptitudes bottom + 10.	btnCancelar left: self left + 10.	btnCancelar mouseAction: [ 		self delete.	 ].		controlador := PostularSolicitudTrabajoController new.		btnPostular := ButtonAction new.	btnPostular label: 'Postular'.	btnPostular top: LabelAptitudes bottom + 10.	btnPostular left: btnCancelar right +10.	btnPostular mouseAction: [ 		self postularse: controlador.		].		self addMorph: LabelDescripcion .	self addMorph: LabelMonto .	self addMorph: LabelFechaVencimiento .	self addMorph: LabelAptitudes .	self addMorph: btnCancelar .	self addMorph: btnPostular .! !Object subclass: #PostularSolicitudTrabajoController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-PostularsePaneles'!!PostularSolicitudTrabajoController methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:19'!verificarPostulacionConPostulante: unPostulante Solicitud: unaSolicitud	|mensaje retorno|.	retorno := true.	mensaje := '', String cr.		(unPostulante esEmpresa ) ifTrue: [ 		retorno := false.		mensaje := 'No se puede postular una empresa a un trabajo', String cr.	]  ifFalse: [		(TrabajoAr estaPostuladoElPostulante: unPostulante ASolicitud: unaSolicitud ) ifTrue: [ 			retorno := false.			mensaje := mensaje , 'No se puede volver a postular a la misma solicitud.', String cr.	 	].			]. 		retorno ifFalse: [		( ErrorDialogWindow new text: mensaje) openInWorld.	].	^ retorno .! !!PostularSolicitudTrabajoController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/13/2024 00:17'!postularSolicitud! !!PostularSolicitudTrabajoController methodsFor: 'initialization' stamp: 'francozuniga 3/14/2024 20:30'!setPostulacionConPostulante: unPostulante Solicitud: unaSolicitud	|control|.	control := self verificarPostulacionConPostulante: unPostulante Solicitud: unaSolicitud .	control ifTrue: [ 		TrabajoAr addPostulacion: (PostulacionServicio new setServicio: unaSolicitud Postulante: unPostulante).					].	^ control.! !BorderedMorph subclass: #EmpresaForm	instanceVariableNames: 'Nombre Rubro Tipo Puntos esSolicitante agregar controlador'	classVariableNames: ''	package: 'TP-UI'!!EmpresaForm methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 17:06'!initialize	|labelNombre labelRubro labelTipo labelPunto labelEsSolicitante|.	super initialize.		self extent: 300@350.	self color: Color gray.		labelNombre := LabelMorph new.	labelNombre extent: 190@30.	labelNombre top: self top + 10.	labelNombre left: self left +10.	labelNombre contents: 'Nombre de la Empresa.'.	labelNombre color: Color white.	self addMorph: labelNombre .		Nombre := RubScrolledTextMorph new.	Nombre extent: 190@30.	Nombre top: self top + 40.	Nombre left: self left + 10.	self addMorph: Nombre.		labelRubro := LabelMorph new.	labelRubro extent: 190@30.	labelRubro top: Nombre bottom .	labelRubro left: self left +10.	labelRubro contents: 'Rubro de la Empresa.'.	labelRubro color: Color white.		self addMorph: labelRubro .		Rubro := RubScrolledTextMorph new.	Rubro extent: 190@30.	Rubro top: labelRubro bottom.	Rubro left: self left + 10.	self addMorph: Rubro.		labelTipo  := LabelMorph new.	labelTipo extent: 190@30.	labelTipo top: Rubro bottom .	labelTipo left: self left +10.	labelTipo contents: 'Tipo de Empresa.'.	labelTipo color: Color white. 		self addMorph: labelTipo.		Tipo := DropListMorph new.	Tipo extent: 190@30.	Tipo top: labelTipo bottom.	Tipo left: self left + 10.	Tipo list: #('EAU' 'EAP' 'EP').		self addMorph: Tipo.	labelPunto := LabelMorph new.	labelPunto extent: 190@30.	labelPunto top: Tipo bottom .	labelPunto left: self left +10.	labelPunto contents: 'Puntos de la Empresa.'.	labelPunto color: Color white. 		self addMorph: labelPunto.		Puntos := RubScrolledTextMorph new.	Puntos extent: 190@30.	Puntos top: labelPunto bottom.	Puntos left: self left + 10.	self addMorph: Puntos.		labelEsSolicitante := LabelMorph new.	labelEsSolicitante extent: 190@30.	labelEsSolicitante top: Puntos bottom .	labelEsSolicitante left: self left +10.	labelEsSolicitante contents: 'Es Solicitante?.'.	labelEsSolicitante color: Color white. 	self addMorph: labelEsSolicitante.		esSolicitante := DropListMorph new.	esSolicitante extent: 190@30.	esSolicitante top: labelEsSolicitante bottom.	esSolicitante left: self left + 10.	esSolicitante list: #('SI' 'NO').	self addMorph: esSolicitante .		controlador := EmpresaFormControl new.	"controlador addDependent: self."		agregar := ButtonAction new.	agregar top: esSolicitante bottom + 10.	agregar left: self left + 10.	agregar mouseAction: [ self agregarEmpresa: controlador ].	agregar label: 'Agregar'.	agregar color: Color green.		self addMorph: agregar.	! !!EmpresaForm methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/18/2024 01:02'!agregarEmpresa: unControlador	unControlador agregarEmpresaConNombre: (Nombre getText ) Rubro: (Rubro getText) Tipo: (Tipo selectedItem ) Puntos: (Puntos getText) EsSolicitante: ( esSolicitante selectedItem = 'SI' ).! !!EmpresaForm methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/18/2024 00:49'!getControlador	^ controlador .! !!EmpresaForm methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/18/2024 00:41'!agregarEmpresa! !Object subclass: #EmpresaFormControl	instanceVariableNames: 'dataset'	classVariableNames: ''	package: 'TP-UI'!!EmpresaFormControl methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/18/2024 01:16'!agregarEmpresaConNombre: unNombre Rubro: unRubro Tipo: unTipo Puntos: unosPuntos EsSolicitante: esSolicitante	|empresa|.	empresa := Empresa nuevaConNombre: ( unNombre clone) Tipo: (unNombre clone) Rubro: (unRubro clone) Puntos: (unosPuntos clone) Solicitante: esSolicitante .	dataset add: empresa.	dataset changed.	! !!EmpresaFormControl methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/18/2024 00:33'!agregarDataset: unDataset	dataset := unDataset .! !BorderedMorph subclass: #ListadoSolicitudesEmpresa	instanceVariableNames: 'scrollPane tabla'	classVariableNames: ''	package: 'TP-UI'!!ListadoSolicitudesEmpresa methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 18:07'!initialize 	super initialize .	self extent: 400@200.		scrollPane := ScrollPane new.	scrollPane extent: 400@200.	self addMorph: scrollPane .		tabla := TablaAcciones new.	tabla setDataset: (TrabajoAr getDatasetSolicitudes ).	scrollPane addMorph: Tabla. ! !BorderedMorph subclass: #Login	instanceVariableNames: 'Nombre Pass IniciarSesion RegistrarEmpresa RegistrarPersona controlador'	classVariableNames: ''	package: 'TP-UI'!!Login methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/23/2024 16:45'!openRegistrarEmpresa: unControlador	unControlador openRegistrarEmpresa .	self delete.! !!Login methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 14:37'!openMisSolicitudes	! !!Login methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/24/2024 20:53'!openRegistrarPersona: unControlador	unControlador openRegistrarPersona .	self delete.! !!Login methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 14:37'!login: unControlador	|postulante dialog panel|.	postulante := unControlador loginConNombre: (Nombre getText ) Pass: (Pass getText ).	postulante ifNil: [ 		dialog := ErrorDialogWindow new.		dialog text: 'El postulante no se encuentra registrado, o los datos de ingreso no son validos', String cr.		dialog openInWorld.	] ifNotNil: [		postulante className = 'Persona' ifTrue: [ 			panel := PanelPersona new.			panel setPersona: postulante.			panel openInWorld .			self delete.		] ifFalse: [  			panel := PanelEmpresa new.			panel setEmpresa: postulante.			panel openInWorld .			self delete.		]	].	! !!Login methodsFor: 'initialization' stamp: 'Anonymous 5/13/2024 19:27'!initialize 		|labelNombre labelPass|.		super initialize .		"Agregamos los datos de "	self extent: 210@250.	self color: Color gray.		controlador := LoginController new.		labelNombre := LabelMorph new.	labelNombre contents: 'Nombre de Empresa o Usuario'.	labelNombre top: self top +10.	labelNombre left: self left +10.	self addMorph: labelNombre .		Nombre := RubScrolledTextMorph new.	Nombre extent: 190@30.	Nombre top: labelNombre bottom +10.	Nombre left: self left+10.		self addMorph: Nombre.		labelPass := LabelMorph new.	labelPass contents: 'CUIT o DNI'.	labelPass top: Nombre bottom +10.	labelPass left: self left + 10.	self addMorph: labelPass .		Pass := RubScrolledTextMorph new.	Pass extent: 190@30.	Pass top: labelPass bottom + 10.	Pass left: self left + 10.		self addMorph: Pass.		"agregamos las opciones de "	IniciarSesion := ButtonAction new.	IniciarSesion label: 'Iniciar Session'.	IniciarSesion top: Pass bottom + 10.	IniciarSesion left: self left + 10.	IniciarSesion mouseAction: [ 		self login: controlador .	].	self addMorph: IniciarSesion .		RegistrarEmpresa := ButtonAction new.	RegistrarEmpresa label: 'Registrar Empresa'.	RegistrarEmpresa top: IniciarSesion bottom +10.	RegistrarEmpresa left: self left + 10.	RegistrarEmpresa mouseAction: [ 		self openRegistrarEmpresa: controlador.	].	self addMorph: RegistrarEmpresa .		RegistrarPersona := ButtonAction new.	RegistrarPersona label: 'Registrar Persona'.	RegistrarPersona top: RegistrarEmpresa bottom + 10.	RegistrarPersona left: self left + 10.	RegistrarPersona mouseAction: [ 		self openRegistrarPersona: controlador .	].	self addMorph: RegistrarPersona. 		TrabajoAr inicializar .! !Object subclass: #LoginController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI'!!LoginController methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/24/2024 16:59'!loginConNombre: unNombre Pass: unaPass	|postulante|.	postulante := TrabajoAr getPostulantes detect: [ :x | x esPostulanteNombre: unNombre Pass: unaPass  ] ifNone: [ nil ].	^ postulante.! !!LoginController methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/24/2024 20:53'!openRegistrarPersona	|registroPersona|.	registroPersona := RegistroMorph  new.	registroPersona openInWorld .! !!LoginController methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/23/2024 16:41'!openRegistrarEmpresa	|registroEmpresa|.	registroEmpresa := RegistrarEmpresa new.	registroEmpresa openInWorld .! !BorderedMorph subclass: #PanelAdministracion	instanceVariableNames: 'dataset colection entradaMaximoIndivisual entradaMaximoEmpresa'	classVariableNames: ''	package: 'TP-UI'!!PanelAdministracion methodsFor: 'initialization' stamp: 'Anonymous 5/13/2024 20:32'!initialize	|lblMaximoIndividual lblMaximoEmpresa tablaEmpresaSolicitantes btnGuardarConfig btnIniciarDia scroll coleccionEmpresasSolicitantes|.	super initialize .	self extent: 800@400.	self color: Color gray.		lblMaximoIndividual := LabelMorph new.	lblMaximoIndividual top: self top + 10.	lblMaximoIndividual left: self left + 10.	lblMaximoIndividual contents: 'Maximo Invidual:'.		entradaMaximoIndivisual := RubScrolledTextMorph new.	entradaMaximoIndivisual setText: (TrabajoAr getMaximoIndividual asString ).	entradaMaximoIndivisual top: lblMaximoIndividual bottom + 10.	entradaMaximoIndivisual left: self left + 10.	entradaMaximoIndivisual extent: 100@30.		lblMaximoEmpresa := LabelMorph new.	lblMaximoEmpresa contents: 'Maximo Empresa:'.	lblMaximoEmpresa top: self top + 10.	lblMaximoEmpresa left: entradaMaximoIndivisual right + 10.		entradaMaximoEmpresa := RubScrolledTextMorph new.	entradaMaximoEmpresa top: lblMaximoEmpresa bottom + 10.	entradaMaximoEmpresa left: entradaMaximoIndivisual right + 10.	entradaMaximoEmpresa setText: (TrabajoAr getMaximoPesos asString).	entradaMaximoEmpresa extent: 100@30.		btnGuardarConfig := ButtonAction new.	btnGuardarConfig label: 'Guardar Configuracion'.	btnGuardarConfig top: lblMaximoIndividual bottom + 10.	btnGuardarConfig left: entradaMaximoEmpresa right + 10.	btnGuardarConfig mouseAction: [ 		self guardarConfig.	].	btnIniciarDia := ButtonAction new.	btnIniciarDia label: 'Iniciar Dia'.	btnIniciarDia top: lblMaximoIndividual bottom + 10.	btnIniciarDia left: btnGuardarConfig right + 10.	btnIniciarDia mouseAction: [  		TrabajoAr rutinaVencidas .	].		"creamos la coleccion y los datos"	dataset := DataSet new.	colection := TrabajoAr getEmpresaSolicitante .	colection sort: [ :a :b 	|  		(a   getCantidadSolicitudes) > (b  getCantidadSolicitudes) 			].		dataset setColeccion: colection  .		scroll := ScrollPane new.	scroll extent: 780@200.	scroll top: entradaMaximoIndivisual bottom + 10.	scroll left: self left + 10.		tablaEmpresaSolicitantes := Tabla new.	tablaEmpresaSolicitantes setDataset: dataset.	tablaEmpresaSolicitantes color: Color gray.		scroll scroller addMorph: tablaEmpresaSolicitantes .		self addMorph: lblMaximoIndividual .	self addMorph: lblMaximoEmpresa .	self addMorph: entradaMaximoIndivisual .	self addMorph: entradaMaximoEmpresa .	self addMorph: btnGuardarConfig .	self addMorph: btnIniciarDia .	self addMorph: scroll .	dataset changed.! !!PanelAdministracion methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 14:07'!guardarConfig	TrabajoAr setMaximoIndividual: (entradaMaximoIndivisual text).	TrabajoAr setMaximoPesos: (entradaMaximoEmpresa text).! !BorderedMorph subclass: #MisPostulaciones	instanceVariableNames: 'postulante tabla dataset scroll'	classVariableNames: ''	package: 'TP-UI-Paneles'!!MisPostulaciones methodsFor: 'initialization' stamp: 'francozuniga 3/17/2024 20:18'!setPostulante: unPostulante	|data|.	"actualziamos el dataset"	postulante := unPostulante .	dataset := DataSet new.		data := (TrabajoAr getPostulaciones) select: [ :x | x getPostulante = unPostulante . ].	dataset setColeccion: data.		tabla setDataset: dataset .	dataset changed.! !!MisPostulaciones methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:21'!initialize	| btnSalir |.	super initialize.	self extent: 700@300.	self color: Color gray.		btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self delete.		].		tabla := Tabla new.		scroll := ScrollPane new.	scroll extent: 680@200.	scroll top: btnSalir bottom + 10.	scroll left: self left + 10.	scroll scroller addMorph: tabla.		self addMorph: btnSalir .	self addMorph: scroll.	! !BorderedMorph subclass: #PanelEmpresa	instanceVariableNames: 'empresa LabelNombre LabelRubro LabelTipo'	classVariableNames: ''	package: 'TP-UI-Paneles'!!PanelEmpresa methodsFor: 'initialization' stamp: 'francozuniga 2/26/2024 23:02'!setEmpresa: unaEmpresa	empresa := unaEmpresa.	unaEmpresa getRubro.	LabelNombre contents: unaEmpresa getNombre.	LabelRubro contents: unaEmpresa getRubro.	LabelTipo contents: unaEmpresa getTipo asString .! !!PanelEmpresa methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 15:41'!initialize	|btnSalir lblNombre lblTipo lblRubro btnSolicitudes btnAgregarSolicitud btnSolicitudesVencidas btnPostulaciones btnMisPostulaciones btnMisSolicitudes controlador|.	super initialize.	self extent: 600@500.	self color: Color gray.		btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self salir.	].	self addMorph: btnSalir .		lblNombre := LabelMorph new.	lblNombre contents: 'Nombre:'.	lblNombre top: btnSalir bottom + 10.	lblNombre left: self left + 10.	self addMorph: lblNombre .		LabelNombre := LabelMorph new.	LabelNombre top: lblNombre bottom + 10.	LabelNombre left: self left + 10.	self addMorph: LabelNombre.		lblTipo := LabelMorph new.	lblTipo contents: 'Tipo'.	lblTipo top: LabelNombre bottom + 10.	lblTipo left: self left + 10.	self addMorph: lblTipo .		LabelTipo := LabelMorph new.	LabelTipo top: lblTipo bottom + 10.	LabelTipo left: self left + 10.	self addMorph: LabelTipo .		lblRubro := LabelMorph new.	lblRubro contents: 'Rubro:'.	lblRubro top: LabelTipo bottom + 10.	lblRubro left: self left + 10.	self addMorph: lblRubro. 		LabelRubro := LabelMorph new.	LabelRubro top: lblRubro bottom + 10.	LabelRubro left: self left + 10.	self addMorph: LabelRubro .		controlador := PanelEmpresaController new.		btnSolicitudes := ButtonAction new.	btnSolicitudes label: 'Lista de Solicitudes'.	btnSolicitudes top: LabelRubro bottom + 10.	btnSolicitudes left: self left +10.	btnSolicitudes mouseAction: [ 		self openSolicitudes: controlador.	 ].	self addMorph: btnSolicitudes .	btnAgregarSolicitud := ButtonAction new.	btnAgregarSolicitud label: 'Agregar una Solicitudes'.	btnAgregarSolicitud top: LabelRubro bottom + 10.	btnAgregarSolicitud left: btnSolicitudes right + 10.	btnAgregarSolicitud mouseAction: [ 		self openAlta: controlador .	].	self addMorph: btnAgregarSolicitud .		btnSolicitudesVencidas := ButtonAction new.	btnSolicitudesVencidas label: 'Solicitudes Vencidas'.	btnSolicitudesVencidas top: LabelRubro bottom + 10.	btnSolicitudesVencidas left: btnAgregarSolicitud right + 10.	btnSolicitudesVencidas mouseAction: [ 		self openSolicitudesVencidas: controlador .	 ].	self addMorph: btnSolicitudesVencidas .		btnPostulaciones := ButtonAction new.	btnPostulaciones label: 'Postulaciones a mis Solicitudes'.	btnPostulaciones top: LabelRubro bottom +10.	btnPostulaciones left: btnSolicitudesVencidas right +10.	btnPostulaciones mouseAction: [ 		self openPostulaciones: controlador .	].	self addMorph: btnPostulaciones .		btnMisPostulaciones := ButtonAction new.	btnMisPostulaciones label: 'Mis Postulaciones'.	btnMisPostulaciones top: btnSolicitudes bottom + 10.	btnMisPostulaciones left: self left + 10.	btnMisPostulaciones mouseAction: [ 		self misPostulaciones: controlador .	].	self addMorph: btnMisPostulaciones .		btnMisSolicitudes := ButtonAction new.	btnMisSolicitudes label: 'Mis Solicitudes'.	btnMisSolicitudes top: btnSolicitudes bottom + 10.	btnMisSolicitudes left: btnMisPostulaciones right + 10.	btnMisSolicitudes mouseAction: [		self openMisSolicitudes .	].	"self addMorph: btnMisSolicitudes ".! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 02:11'!salir	|login|.	empresa := nil.	login := Login new.	login openInWorld .	self delete.! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:18'!misPostulaciones: unControlador	unControlador misPostulaciones: empresa.! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 18:51'!openSolicitudesVencidas: unControlador	empresa getEmpresaSolicitante ifNotNil: [ 		unControlador openSolicitudesVencidas: (empresa getEmpresaSolicitante ).			].! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 15:32'!openMisSolicitudes: controlador	empresa getEmpresaSolicitante ifNotNil:[		"listamos las solicitudes de esta empresa".		controlador openSolicitudesDeEmpresaSolicitante: ( empresa getEmpresaSolicitante ).	].! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 01:18'!openPostulaciones: unControlador	(empresa getEmpresaSolicitante ) ifNotNil: [ 		unControlador openPostulaciones: (empresa getEmpresaSolicitante ).		 ].! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 17:16'!openSolicitudes: unControlador	unControlador openSolicitudes: empresa.! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 15:31'!openMisSolicitudes	empresa getEmpresaSolicitante ifNotNil:[		"listamos las solicitudes de esta empresa".	].! !!PanelEmpresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/9/2024 21:08'!openAlta: unControlador	empresa esSolicitante ifTrue: [ 		unControlador openAgregarSolicitud: empresa .	] ifFalse: [ 		InfoDialog new setMessage: 'La empresa no es solicitante.'.	].! !Object subclass: #PanelEmpresaController	instanceVariableNames: 'empresa'	classVariableNames: ''	package: 'TP-UI-Paneles'!!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 18:49'!openSolicitudesVencidas: empresaSolicitante	"abrimos una pantalla de tabla solictudes vencidas"	(TablaSolicitudesVencidas new setEmpresa: empresaSolicitante) openInWorld. ! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:19'!misPostulaciones: unPostulante	(MisPostulaciones new setPostulante: unPostulante ) openInWorld .! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 15:30'!openSolicitudesDeEmpresaSolicitante: unaEmpresaSolicitante	! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 01:17'!openPostulaciones: unaEmpresaSolicitante	|panelPostulaciones|.	panelPostulaciones := PostulantesASolicitud new.	panelPostulaciones setEmpresaSolicitante: unaEmpresaSolicitante .	panelPostulaciones openInWorld .! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 17:16'!openSolicitudes: postulante	|panelSolicitudes|.	panelSolicitudes := TablaSolicitudes new.	panelSolicitudes setPostulante: postulante.	panelSolicitudes openInWorld .! !!PanelEmpresaController methodsFor: 'as yet unclassified'!openAgregarSolicitud	|alta|.	alta := AltaSolicitud new.	alta openInWindow.! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 00:47'!openSolicitudes	|panelSolicitudes|.	panelSolicitudes := TablaSolicitudes new.	panelSolicitudes openInWorld .! !!PanelEmpresaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/9/2024 22:14'!openAgregarSolicitud: unaEmpresa	|alta|.	alta := AltaSolicitud new.	alta setEmpresa: unaEmpresa.	alta openInWorld.! !BorderedMorph subclass: #PanelPersona	instanceVariableNames: 'Persona LabelNombre LabelAptitudes listadoSolicitudes btnSolicitudes btnMisPostulaciones btnSalir'	classVariableNames: ''	package: 'TP-UI-Paneles'!!PanelPersona methodsFor: 'initialization' stamp: 'francozuniga 2/25/2024 18:32'!setPersona: unaPersona	Persona := unaPersona . 	LabelNombre contents: unaPersona getNombre.	LabelAptitudes contents: unaPersona getAptitudes.! !!PanelPersona methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:12'!initialize 	|lblNombre lblAptitudes controlador|.	super initialize.	self color: Color gray.	self extent: 500@500.		btnSalir := ButtonAction new.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir label: 'Salir'.	btnSalir mouseAction: [ 		self salir.	].	self addMorph: btnSalir .		lblNombre := LabelMorph new.	lblNombre contents: 'Nombre:'.	lblNombre top: btnSalir bottom + 10.	lblNombre left: self left + 10.	self addMorph: lblNombre .		LabelNombre := LabelMorph new.	LabelNombre top: lblNombre bottom + 10.	LabelNombre left: self left + 10.	self addMorph: LabelNombre .		lblAptitudes := LabelMorph new.	lblAptitudes contents: 'Aptittudes:'.	lblAptitudes top: LabelNombre bottom + 10.	lblAptitudes left: self left +10.	self addMorph: lblAptitudes .		LabelAptitudes := LabelMorph new.	LabelAptitudes top: lblAptitudes bottom + 10.	LabelAptitudes left: self left + 10.	self addMorph: LabelAptitudes .		controlador := PanelPersonaController new.		btnSolicitudes := ButtonAction new.	btnSolicitudes label:'Solicitudes'.	btnSolicitudes top: LabelAptitudes bottom + 10.	btnSolicitudes left: self left + 10.	btnSolicitudes mouseAction: [ 		self openSolicitudes: controlador .	].	self addMorph: btnSolicitudes .		btnMisPostulaciones := ButtonAction new.	btnMisPostulaciones label: 'Mis Postulaciones'.	btnMisPostulaciones top: LabelAptitudes bottom + 10.	btnMisPostulaciones left: btnSolicitudes right + 10.	btnMisPostulaciones mouseAction: [ 		self misPostulaciones: controlador .	].		self addMorph: btnMisPostulaciones .! !!PanelPersona methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 02:02'!openSolicitudes: unControlador	unControlador openSolicitudes: Persona.! !!PanelPersona methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 17:10'!misPostulaciones: unControlador	unControlador misPostulaciones: Persona.! !!PanelPersona methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/26/2024 23:10'!salir	|login|.	Persona := nil.	login := Login new.	login openInWorld .	self delete.! !Object subclass: #PanelPersonaController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Paneles'!!PanelPersonaController methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 02:02'!openSolicitudes: postulante	|panelSolicitudes|.	panelSolicitudes := TablaSolicitudes new.	panelSolicitudes setPostulante: postulante.	panelSolicitudes openInWorld .! !!PanelPersonaController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 17:09'!misPostulaciones: unPostulante	(MisPostulaciones new setPostulante: unPostulante ) openInWorld .! !