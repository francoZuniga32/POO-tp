Object subclass: #Accion	instanceVariableNames: 'nombre acciones valores'	classVariableNames: ''	package: 'TP-Framework'!!Accion methodsFor: 'accessing' stamp: 'francozuniga 10/28/2023 17:50'!nombre: unNombre	nombre := unNombre.! !!Accion methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 03:02'!getValores	^ valores.! !!Accion methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 18:11'!accion: unaAccion	acciones := unaAccion .! !!Accion methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 19:31'!getNombre	^nombre.! !!Accion methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 19:31'!getAccion	^ acciones.! !!Accion methodsFor: 'evaluating' stamp: 'francozuniga 10/29/2023 20:02'!value	valores ifNil:[ 		acciones getAccion value.		]. 	valores ifNotNil: [ 		acciones getAccion value: valores.	].	! !!Accion methodsFor: 'initialization' stamp: 'francozuniga 10/29/2023 19:20'!setValores: unosValores	valores := unosValores.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Accion class	instanceVariableNames: ''!!Accion class methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 18:11'!nombre: unNombre accion: unaAccion	|accion|.	accion := self new.	accion nombre: unNombre.	accion accion: unaAccion .	^accion.! !SimpleButtonMorph subclass: #ButtonAction	instanceVariableNames: 'bloque bloqueAccion valores'	classVariableNames: ''	package: 'TP-Framework'!!ButtonAction methodsFor: 'event handling' stamp: 'francozuniga 3/10/2024 03:20'!mouseUp: unEvento	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	super mouseUp: unEvento.	valores ifNil: [ 		bloqueAccion value.		] ifNotNil: [ 		bloqueAccion value: valores.	]	! !!ButtonAction methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/11/2023 00:18'!mouseAction: unBloque	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	bloqueAccion := unBloque .! !!ButtonAction methodsFor: 'initialization' stamp: 'francozuniga 3/10/2024 03:19'!setValores: unosValores	valores := unosValores .! !!ButtonAction methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 17:42'!initialize	super initialize .	self color: Color darkGray .! !BorderedMorph subclass: #CalendarSelect	instanceVariableNames: 'Calendar btnSelect'	classVariableNames: ''	package: 'TP-Framework'!!CalendarSelect methodsFor: 'initialization' stamp: 'francozuniga 2/26/2024 23:33'!initialize	super initialize.	Calendar := CalendarMorph new.	Calendar date: Date today.	self addMorph: Calendar.		btnSelect := ButtonAction new.	btnSelect label: 'Seleccionar'.	btnSelect top: Calendar bottom + 10.	btnSelect left: self left + 10.	self addMorph: btnSelect .		self width: Calendar width.	self height: (Calendar height ) + 10 + (btnSelect height ).	! !BorderedMorph subclass: #CeldValue	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP-Framework'!!CeldValue methodsFor: 'initialization' stamp: 'francozuniga 10/9/2023 16:25'!setValor: unValor	valor contents: unValor.			! !!CeldValue methodsFor: 'initialization' stamp: 'francozuniga 10/27/2023 00:29'!initialize 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	super initialize .	self color: Color white.	self position: (25@25).	self bounds: ( self position extent: 100@20).		valor := LabelMorph new.	valor color: Color black.	valor position: self innerBounds origin.	valor left: (self left + 5).		self addMorph: valor.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CeldValue class	instanceVariableNames: ''!!CeldValue class methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/9/2023 16:30'!nuevaCeldaConValor: unValor	|celda textMorph|.	celda := self new.	textMorph := TextMorph new.		textMorph contents: unValor.	textMorph position: celda position.	textMorph extent: celda extent.	textMorph color: Color black.	celda addMorph: textMorph .	^celda.	! !CeldValue subclass: #CeldAction	instanceVariableNames: 'text accion boton values'	classVariableNames: ''	package: 'TP-Framework'!!CeldAction methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/29/2023 19:52'!getAccion	^ accion.! !!CeldAction methodsFor: 'initialization' stamp: 'francozuniga 3/16/2024 19:21'!setAction: aAction 	boton mouseAction: aAction getAccion .	boton setValores: aAction getValores.	boton label: aAction getNombre.	! !!CeldAction methodsFor: 'initialization' stamp: 'francozuniga 10/29/2023 20:48'!setValores: unosValores	accion getAccion setValores: unosValores.! !!CeldAction methodsFor: 'initialization' stamp: 'francozuniga 3/10/2024 22:37'!initialize	|label|.	label := ''.	super initialize .	self setValor: ''.	boton := ButtonAction new.	boton extent: self extent.	boton top: self top.	boton left: self left.	self addMorph: boton.		 ! !Object subclass: #DataSet	instanceVariableNames: 'colection'	classVariableNames: ''	package: 'TP-Framework'!!DataSet methodsFor: 'adding' stamp: 'Anonymous 3/19/2024 21:52'!add: aObjet	colection ifNil:  [		colection := OrderedCollection new.	]. 	colection add: aObjet .! !!DataSet methodsFor: 'removing' stamp: 'francozuniga 10/31/2023 21:02'!remove: index	colection removeIndex: index.	self changed .! !!DataSet methodsFor: 'updating' stamp: 'francozuniga 2/13/2024 18:47'!updateData	self changed .! !!DataSet methodsFor: 'initialization' stamp: 'Anonymous 3/19/2024 21:51'!initialize	super initialize .	colection := OrderedCollection new.! !!DataSet methodsFor: 'initialization' stamp: 'francozuniga 10/27/2023 20:44'!setColeccion: aColection	colection := aColection .! !!DataSet methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 01:37'!getCollection	^colection .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DataSet class	instanceVariableNames: ''!!DataSet class methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/27/2023 20:44'!createWithColeccion: aColection	|dataSet|.	dataSet := self new.	dataSet setColeccion: aColection .	^ dataSet .! !PopupChoiceOrRequestDialogWindow subclass: #InfoDialog	instanceVariableNames: 'Mensaje Ok'	classVariableNames: ''	package: 'TP-Framework'!!InfoDialog methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 17:11'!setMessage: aMessage	Mensaje contents: aMessage.	Ok top: Mensaje bottom + 10.	self labels: aMessage .	self height: 100.	self width: Mensaje width .! !!InfoDialog methodsFor: 'initialization' stamp: 'francozuniga 2/21/2024 00:43'!initialize.	super initialize.		self width: 100.	self color: Color gray.		Mensaje := LabelMorph new.	Mensaje top: self top + 20.	Mensaje left: self left + 20.	self addMorph: Mensaje. 		self width: Mensaje width .		Ok := ButtonAction new.	Ok extent: 100@30.	Ok label: 'Ok'.	Ok mouseAction: [ 		self delete .	].	Ok bottom: self bottom - 10.	Ok left: self left + 10. 	self addMorph: Ok.! !BorderedMorph subclass: #Input	instanceVariableNames: 'valor type valorMostrado'	classVariableNames: ''	package: 'TP-Framework'!!Input methodsFor: 'initialization' stamp: 'francozuniga 10/27/2023 20:36'!initialize 	super initialize .		self color: Color white .	self extent: 200@20.	valorMostrado := TextMorph new.	valorMostrado extent: 200@20.	valorMostrado position: self position .	valorMostrado textColor: Color black.	valorMostrado left: self left.	valorMostrado top: self top.		self addMorph: valorMostrado .! !BorderedMorph subclass: #Row	instanceVariableNames: 'id celdas datos left top'	classVariableNames: ''	package: 'TP-Framework'!!Row methodsFor: 'initialization' stamp: 'francozuniga 10/9/2023 23:56'!setData: aData	|celdatmp widthNew aLeft|.	datos := aData.	widthNew := 0.	aLeft := self left.	aData do: [ :x |		celdatmp := CeldValue new.		celdatmp left: aLeft.		celdatmp top: self top.		celdatmp setValor: x   .		self addMorph: celdatmp .				aLeft := aLeft + celdatmp width.			widthNew := widthNew + celdatmp width.	].	left := aLeft .	self height: celdatmp height.	self width: widthNew .! !!Row methodsFor: 'initialization' stamp: 'francozuniga 10/28/2023 19:48'!getId	^id.! !!Row methodsFor: 'initialization' stamp: 'francozuniga 10/28/2023 19:48'!setId: aId	id := aId.! !!Row methodsFor: 'initialization' stamp: 'francozuniga 10/9/2023 23:47'!initialize		super initialize .	self extent: 300@25.	top := self top.	left := self left.		! !!Row methodsFor: 'adding' stamp: 'francozuniga 10/29/2023 00:32'!addCeld: aCeld	aCeld left: left.	aCeld top: self top.	self addMorph: aCeld.	left := left + (aCeld width).! !!Row methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 01:50'!getDatos	^ datos.! !BorderedMorph subclass: #Select	instanceVariableNames: 'selectedValue dataset list'	classVariableNames: ''	package: 'TP-Framework'!!Select methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/17/2024 00:59'!agregarOpcionConObjeto: unObjeto	list addRowWidthObject: unObjeto.! !!Select methodsFor: 'initialization' stamp: 'francozuniga 2/17/2024 01:08'!initialize	super initialize .		"creamos el campo de seleccion"	self extent: 300@25.	"creamos la tabla de elementos a seleccionar."	list := TablaAcciones new.	list setAccionWithName: 'select' action: [ :x |		Transcript show: (x at: 'id').	 ].! !!Select methodsFor: 'event handling' stamp: 'francozuniga 2/17/2024 00:59'!mouseUp: unEvento	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	super mouseUp: unEvento.	list openInWorld .! !Morph subclass: #Tabla	instanceVariableNames: 'rows data top width heigth maxwidth dataSet'	classVariableNames: ''	package: 'TP-Framework'!!Tabla methodsFor: 'adding' stamp: 'francozuniga 2/7/2024 14:21'!addRowWidthObject: aObject	self setRowWidthData: (aObject getColection).			! !!Tabla methodsFor: 'updating' stamp: 'francozuniga 3/17/2024 01:39'!update: aObjet	dataSet := aObjet .	"actualizar las tablas de la aplicacion".	rows do:[ :x |		x delete.	].	rows := OrderedCollection new.	top := self top.	width := 0. 		dataSet getCollection do: [ :x |		x isCollection ifTrue: [ 			self setRowWidthData: x.			 ] ifFalse: [ 			self addRowWidthObject: x.		 ]	].	! !!Tabla methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 01:53'!getDataSet	^ dataSet .! !!Tabla methodsFor: 'as yet unclassified' stamp: 'francozuniga 10/28/2023 01:08'!getRows	^ rows.			! !!Tabla methodsFor: 'initialization' stamp: 'francozuniga 3/10/2024 14:08'!setRowWidthData: aData	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	|aRow|.		aRow := Row new.	aRow top: top.	aRow left: self left.	aRow setData: aData.	aRow setId: (rows size + 1).	self addMorph: aRow.	top := top + aRow height .		(aRow width) > width ifTrue: [ 		width := aRow width.		self width: aRow width.	 ].		self height: top.		rows add: aRow.	! !!Tabla methodsFor: 'initialization'!setDataset: unDataset	dataSet := unDataset .	dataSet addDependent: self.! !!Tabla methodsFor: 'initialization' stamp: 'francozuniga 3/17/2024 01:38'!initialize 	super initialize.		top := self top.	width := 0.		rows := OrderedCollection new.	dataSet := DataSet new.	dataSet addDependent: self.	! !Tabla subclass: #TablaAcciones	instanceVariableNames: 'datos acciones'	classVariableNames: ''	package: 'TP-Framework'!!TablaAcciones methodsFor: 'initialization' stamp: 'francozuniga 10/28/2023 18:57'!setAccionWithName: aName action: aBlock	acciones add: (Accion nombre: aName accion: aBlock).! !!TablaAcciones methodsFor: 'initialization' stamp: 'francozuniga 3/10/2024 14:08'!setRowWidthData: aData	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	|aRow celdaAccionTemp accionTemp collectionTemp|.	aRow := Row new.	aRow top: top.	aRow left: self left.	aRow setData: aData.	aRow setId: ((rows size) clone ) + 1.	"tenemos que crear las acciones."	acciones do: [:accion |		collectionTemp := OrderedDictionary  new.		collectionTemp add: (Association key: 'id' value: (aRow getId) ).		collectionTemp add: (Association  key: 'dataset' value: dataSet ).				celdaAccionTemp := CeldAction new.		accionTemp := accion clone.		accionTemp setValores: collectionTemp .		celdaAccionTemp setAction: accionTemp .		aRow addCeld: celdaAccionTemp .	].	self addMorph: aRow.	top := top + aRow height .		(aRow width) > width ifTrue: [ 		width := aRow width.		self width: aRow width.	 ].		self height: top.		rows add: aRow.	! !!TablaAcciones methodsFor: 'initialization' stamp: 'francozuniga 11/1/2023 20:43'!setRowWidthDataAfterUpdate: aData	|aRow celdaAccionTemp accionTemp collectionTemp|.	aRow := Row new.	aRow top: top.	aRow left: self left.	aRow setData: aData.	aRow setId: ((rows size) clone ) + 1.	"tenemos que crear las acciones."	acciones do: [:accion |		collectionTemp := OrderedDictionary  new.		collectionTemp add: ( Association key: 'id' value: (aRow getId) ).		collectionTemp add: (Association  key: 'dataset' value: dataSet ).				celdaAccionTemp := CeldAction new.		accionTemp := accion clone.		accionTemp setValores: collectionTemp .		celdaAccionTemp setAction: accionTemp .		aRow addCeld: celdaAccionTemp .	].	self addMorph: aRow.	top := top + aRow height .		(aRow width) > width ifTrue: [ 		width := aRow width.		self width: aRow width.	 ].		self height: top.		rows add: aRow.	! !!TablaAcciones methodsFor: 'initialization' stamp: 'francozuniga 10/28/2023 17:25'!initialize 	super initialize .	acciones := OrderedCollection new.	! !