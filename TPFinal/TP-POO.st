Object subclass: #EmpresaSolicitante	instanceVariableNames: 'solicitudes empresa solicitudesVencidas'	classVariableNames: ''	package: 'TP-POO'!!EmpresaSolicitante methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:25'!revalidarSolicitud: unaSolicitud	solicitudes add: unaSolicitud .	solicitudesVencidas remove: unaSolicitud ifAbsent: [ nil ] .		"ahora revalidamos en trabajoAr."	TrabajoAr revalidarSolicitud: unaSolicitud.! !!EmpresaSolicitante methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/29/2024 02:52'!getCantidadSolicitudes	^ solicitudes size.! !!EmpresaSolicitante methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:53'!rutinaVencidas 	"agregamos las solicitudes vencidas a la coleccion de solicitudes vencidas"	(solicitudes select:[:x | x getFechaVencimiento < (Date today)]) do:[ :each |		solicitudesVencidas add: each.	].	"ahora eliminamos las vencidas "	solicitudesVencidas do:[:x|		solicitudes remove: x ifAbsent: [ nil ].	].! !!EmpresaSolicitante methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 18:47'!getSolicitudesVencidas	^ solicitudesVencidas .! !!EmpresaSolicitante methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/11/2024 23:34'!getSolicitudes	^ solicitudes .! !!EmpresaSolicitante methodsFor: 'initialization' stamp: 'Anonymous 3/26/2024 01:00'!initialize 	super initialize .	solicitudes := OrderedCollection new.	solicitudesVencidas := OrderedCollection new.! !!EmpresaSolicitante methodsFor: 'initialization' stamp: 'francozuniga 2/18/2024 20:13'!setEmpresa: unaEmpresa	empresa := unaEmpresa .! !!EmpresaSolicitante methodsFor: 'initialization' stamp: 'Anonymous 5/13/2024 20:32'!getColection 	^ (empresa getColection) .! !!EmpresaSolicitante methodsFor: 'initialization' stamp: 'francozuniga 2/18/2024 20:14'!addSolicitud: unaSolicitud	solicitudes add: unaSolicitud .! !Object subclass: #Postulacion	instanceVariableNames: 'aceptada'	classVariableNames: ''	package: 'TP-POO'!!Postulacion methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/18/2024 19:07'!aprobar	aceptada := true.! !Postulacion subclass: #PostulacionServicio	instanceVariableNames: 'postulante solicitudServicio'	classVariableNames: ''	package: 'TP-POO'!!PostulacionServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 18:37'!getSolicitud	^ solicitudServicio .! !!PostulacionServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/12/2024 23:32'!esPostulacionDePostulante: unPostulante YSolicitud: unaSolicitud	^ (postulante = unPostulante) & (solicitudServicio = unaSolicitud) .! !!PostulacionServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:16'!getPostulante	^ postulante .! !!PostulacionServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:15'!getPostulantes	^ postulante .! !!PostulacionServicio methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:47'!getColection 	|colection|.		colection := solicitudServicio getColection .	aceptada ifNil: [ 		aceptada := false.		] .	aceptada ifTrue:  [		colection add: 'Aprobada'		] ifFalse:[		colection add: 'Pendiente'.	].	^ colection.! !!PostulacionServicio methodsFor: 'initialization' stamp: 'francozuniga 3/16/2024 23:44'!setServicio: unServicio Postulante: unPostulante	postulante := unPostulante .	solicitudServicio := unServicio .	aceptada := false.! !Postulacion subclass: #PostulacionTrabajo	instanceVariableNames: 'persona solicitudTrabajo'	classVariableNames: ''	package: 'TP-POO'!!PostulacionTrabajo methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:47'!getColection 	|colection|.		colection := solicitudTrabajo getColection .	aceptada ifNil: [ 		aceptada := false.		].	aceptada ifTrue:  [		colection add: 'Aprobada'		] ifFalse:[		colection add: 'Pendiente'.	].		colection add: (aceptada asString).	^ colection.! !!PostulacionTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 18:37'!getSolicitud	^ solicitudTrabajo .! !!PostulacionTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/12/2024 23:43'!esPostulacionDePostulante: unPostulante YSolicitud: unaSolicitud	^ (persona = unPostulante) & (solicitudTrabajo = unaSolicitud) .! !!PostulacionTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:16'!getPostulante	^ persona .! !!PostulacionTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/17/2024 20:15'!getPostulantes	^ persona .! !Object subclass: #Postulante	instanceVariableNames: 'ID Nombre Pass'	classVariableNames: ''	package: 'TP-POO'!!Postulante methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:43'!esEmpresa	^ false.! !!Postulante methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:43'!esPersona	^false.! !!Postulante methodsFor: 'initialization' stamp: 'Anonymous 5/6/2024 18:38'!getColection 	|colection|.	colection := OrderedCollection new.	colection add: ID.	colection add: Nombre .	^ colection .	 ! !!Postulante methodsFor: 'initialization' stamp: 'francozuniga 2/25/2024 00:56'!initialize 	super initialize .	ID := UUIDGenerator new next hex .! !Postulante subclass: #Empresa	instanceVariableNames: 'Rubro CUIT Tipo puntos solicitudes esSolicitante empresaSolicitante'	classVariableNames: ''	package: 'TP-POO'!!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/26/2024 23:00'!getRubro	^ Rubro .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/9/2024 21:15'!getEmpresaSolicitante	^ empresaSolicitante .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/26/2024 20:28'!getTipo	^ Tipo.! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/6/2024 19:51'!verificarPuntosParaSolicitud: unaSolicitud	^ (unaSolicitud getMonto ) <= (( self getPuntos ) * (TrabajoAr getMaximoPesos )).! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/26/2024 20:28'!getNombre	^ Nombre.! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/11/2024 23:43'!tieneSolicitud: unaSolicitud	|control|.	empresaSolicitante ifNotNil: [ 		control := empresaSolicitante getSolicitudes includes: unaSolicitud. 	] ifNil:[		control := false.	].	^ control .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/6/2024 18:58'!getColection	|colection|.	colection := super getColection .	colection addFirst: 'Empresa'.	colection add: CUIT.	colection add: Rubro.	colection add: Tipo.	colection add: puntos asString.	empresaSolicitante ifNil: [ 		colection add: 'true'.		 ] ifNotNil:  [ 		colection add: 'false'.	 ].	^ colection .	! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/23/2024 18:27'!esPostulanteNombre: unNombre Pass: unaPass	^ (Nombre = unNombre) & (CUIT = unaPass).! !!Empresa methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/15/2024 00:08'!getPuntos	|retorno|.	puntos ifNil: [		retorno := 2.		] ifNotNil: [		retorno := puntos.	].	^ retorno .! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/26/2024 01:22'!rutinaVencidas	empresaSolicitante ifNotNil:[		empresaSolicitante rutinaVencidas.	]! !!Empresa methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:43'!esEmpresa 	^true.! !!Empresa methodsFor: 'accessing' stamp: 'francozuniga 3/9/2024 21:07'!esSolicitante	^ empresaSolicitante isNotNil .! !!Empresa methodsFor: 'initialization' stamp: 'francozuniga 3/14/2024 21:12'!setPuntos: unosPuntos	puntos := unosPuntos .! !!Empresa methodsFor: 'initialization' stamp: 'Anonymous 4/10/2024 17:56'!initialize 	super initialize .	puntos := 2.! !!Empresa methodsFor: 'initialization' stamp: 'francozuniga 2/18/2024 14:24'!setEmpresaSolicitante: unaEmpresaSolicitante	empresaSolicitante := unaEmpresaSolicitante.! !!Empresa methodsFor: 'setter' stamp: 'francozuniga 3/14/2024 22:32'!setNombre: unNombre CUIT: unCuit Tipo: unTipo Rubro: unRubro Solicitante: solicitante	Nombre := unNombre .	Tipo := unTipo.	Rubro := unRubro.	CUIT := unCuit .	esSolicitante :=solicitante .	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'construction' stamp: 'francozuniga 3/14/2024 22:33'!nuevaConNombre: unNombre Tipo: unTipo Rubro: unRubro Puntos: unosPuntos Solicitante: solicitante	|empresa|.	empresa := self new.	empresa setNombre: unNombre  Tipo: unTipo  Rubro: unRubro Puntos: unosPuntos Solicitante: solicitante . 	empresa setPuntos: (Random new nextIntegerBetween: 1 and: 5 ) . 	solicitante ifTrue: [ 		empresa setEmpresaSolicitante: (EmpresaSolicitante new)	.	].		^empresa.! !!Empresa class methodsFor: 'construction' stamp: 'francozuniga 3/14/2024 23:01'!nuevaConNombre: unNombre Cuit: unCuit Tipo: unTipo Rubro: unRubro Solicitante: solicitante	|empresa|.	empresa := self new.	empresa setNombre: unNombre CUIT: unCuit Tipo: unTipo Rubro: unRubro Solicitante: solicitante. 	empresa setPuntos: 1. 	solicitante ifTrue: [ 		empresa setEmpresaSolicitante: (EmpresaSolicitante new)	.	].		^empresa.! !!Empresa class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:42'!esEmpresa	^ true.! !Empresa subclass: #EmpresaConvinada	instanceVariableNames: 'producto'	classVariableNames: ''	package: 'TP-POO'!!EmpresaConvinada methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/26/2024 20:56'!getRubro 	^ Rubro.! !!EmpresaConvinada methodsFor: 'initialization' stamp: 'francozuniga 2/22/2024 23:01'!setNombre: unNombre CUIT: unCuit Tipo: unTipo Rubro: unRubro Producto: unProducto Solicitante: solicitante	Nombre := unNombre .	Tipo := unTipo.	Rubro := unRubro.	CUIT := unCuit .	producto := unProducto .	esSolicitante :=solicitante .! !!EmpresaConvinada methodsFor: 'initialization' stamp: 'francozuniga 2/25/2024 00:35'!initialize 	super initialize .! !Postulante subclass: #Persona	instanceVariableNames: 'Dni Aptitudes SolicitudesTrabajo'	classVariableNames: ''	package: 'TP-POO'!!Persona methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/23/2024 18:27'!esPostulanteNombre: unNombre Pass: unaPass	^ (Nombre = unNombre) & (Dni = unaPass ).! !!Persona methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/25/2024 18:43'!getNombre	^ Nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/6/2024 19:46'!verificarPuntosParaSolicitud: unaSolicitud	^ (unaSolicitud getMonto ) <= (TrabajoAr getMaximoIndividual ).! !!Persona methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 20:43'!esPersona	^true.! !!Persona methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/25/2024 18:32'!getAptitudes	^ Aptitudes.! !!Persona methodsFor: 'initialization' stamp: 'francozuniga 2/25/2024 00:34'!initialize 	super initialize .! !!Persona methodsFor: 'initialization' stamp: 'Anonymous 5/6/2024 19:28'!getColection	|colection|.	colection := super getColection.	colection addFirst: 'Persona'.	colection add: Dni.	colection add: Aptitudes.	colection add: '-'.	colection add: '-'.	colection add: '-'.	^ colection .! !!Persona methodsFor: 'initialization' stamp: 'francozuniga 2/24/2024 22:40'!setNombre: unNombre Dni: unDni Aptitudes: unasAptitudes	Nombre := unNombre .	Dni := unDni.	Aptitudes := unasAptitudes .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/24/2024 22:42'!nuevaConNombre:  unNombre Dni: unDni Aptitudes: unasAptitudes	|persona|.	persona := Persona new.	persona setNombre: unNombre Dni: unDni Aptitudes: unasAptitudes .	^persona .! !Object subclass: #Rubros	instanceVariableNames: 'Nombre'	classVariableNames: ''	package: 'TP-POO'!!Rubros methodsFor: 'initialization' stamp: 'francozuniga 2/19/2024 20:12'!setNombre: unNombre	Nombre := unNombre.! !!Rubros methodsFor: 'initialization' stamp: 'francozuniga 2/19/2024 20:21'!getColection 	|colection|.	colection := OrderedCollection new.	colection add: Nombre.	^ colection.! !Object subclass: #Solicitud	instanceVariableNames: 'uuid fechaVencimiento valido descripcion monto aprobada asignado fechacreacion'	classVariableNames: ''	package: 'TP-POO'!!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/27/2024 19:21'!getFechaCreacion	^ fechacreacion .! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/6/2024 19:42'!getMonto	^ monto asString asInteger .! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/20/2024 18:53'!asignar: unPostulante	aprobada := true.	asignado := unPostulante .! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:16'!esSolicitudTrabajo	^false.! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:15'!getFechaVencimiento	^ fechaVencimiento .! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/20/2024 19:11'!estaAsignada	^ asignado isNotNil .! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:16'!esSolicitudServicio	^false.! !!Solicitud methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 18:38'!setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento	descripcion := unaDescripcion .	monto := unMonto .	fechaVencimiento := unaFechaVencimiento .! !!Solicitud methodsFor: 'initialization' stamp: 'Anonymous 3/25/2024 22:53'!setFechaVencimiento: unaFechaVencimiento	fechaVencimiento := unaFechaVencimiento .! !!Solicitud methodsFor: 'initialization' stamp: 'Anonymous 5/8/2024 21:48'!getColection 	|colection|.	colection := OrderedCollection new.	colection add: uuid asString.	colection add: descripcion .	colection add: fechacreacion ddmmyyyy .	colection add: fechaVencimiento ddmmyyyy .	colection add: '$.', monto asString.	^ colection.! !!Solicitud methodsFor: 'initialization' stamp: 'Anonymous 4/1/2024 21:50'!initialize	super initialize .	uuid := UUIDGenerator new next hex .	fechacreacion := Date today.	aprobada := false.! !!Solicitud methodsFor: 'accessing' stamp: 'francozuniga 3/10/2024 20:15'!getDescription 	^ descripcion .! !Solicitud subclass: #SolicitudServicio	instanceVariableNames: 'frecunciaPago esProlongado producto incumbencias'	classVariableNames: ''	package: 'TP-POO'!!SolicitudServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:17'!getIncumbencias	^incumbencias.! !!SolicitudServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:16'!getFrecuenciaPago	^ frecunciaPago .! !!SolicitudServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:16'!getProducto	^ producto.! !!SolicitudServicio methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:16'!esSolicitudServicio	^true.! !!SolicitudServicio methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:16'!EsProlongado	^ esProlongado = 'Si'.! !!SolicitudServicio methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 23:21'!setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento EsProlongado: prolongado Periodo: unPeriodo Producto: unProducto	self setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento .	prolongado = 'Si' ifTrue: [ 		esProlongado := true.		frecunciaPago := unPeriodo .	 ] ifFalse:  [ 		esProlongado := false.	 ].	producto := unProducto .! !Solicitud subclass: #SolicitudTrabajo	instanceVariableNames: 'aptitudes'	classVariableNames: ''	package: 'TP-POO'!!SolicitudTrabajo methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 20:15'!getAptitudes	^ aptitudes .! !!SolicitudTrabajo methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:16'!esSolicitudTrabajo	^true.! !!SolicitudTrabajo methodsFor: 'initialization' stamp: 'francozuniga 2/28/2024 23:25'!setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento Aptitudes: unasAptitudes	self setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento .	aptitudes := unasAptitudes . 		! !Object subclass: #TrabajoAr	instanceVariableNames: ''	classVariableNames: 'MAXIMOINDIVIDUAL MAXIMOPESOS Postulaciones aptitudes datasetSolicitudes datasetSolicitudesVencidas empresasSolicitantes postulantes rubros solicitudesVencidas solicitudesVigentes'	package: 'TP-POO'!!TrabajoAr methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/19/2024 20:22'!getDatasetRubros	^ rubros .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TrabajoAr class	instanceVariableNames: ''!!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/12/2024 23:43'!estaPostuladoElPostulante: unPostulante ASolicitud: unaSolicitud	^ (Postulaciones detect: [ :x | x esPostulacionDePostulante: unPostulante YSolicitud: unaSolicitud  ] ifNone: [nil] ) isNotNil .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/21/2024 19:13'!searchPostulante: unPostulante	! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/13/2024 19:18'!getEmpresaSolicitante 	^ empresasSolicitantes .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/24/2024 01:03'!getPosutulanteConNombre: unNombre Pass: unaPass	^ postulantes detect: [ :each | each esPostulanteNombre: unNombre Pass: unaPass ] ifNone: [ nil ].! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:32'!getSolicitudesVencidas 	^ solicitudesVencidas .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/10/2024 01:41'!clearSolicitudes	datasetSolicitudes setColeccion: OrderedCollection new.! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/14/2024 23:12'!cumpleMaximoPesosPostulante: unPostulante ConSolicitud: unaSolicitud	|retorno|.		((unPostulante className) = 'Persona') ifTrue:  [		"comprobamos que la propuesta no supere la cantidad"		retorno := ( ((unaSolicitud getMonto ) asString) asInteger ) <= MAXIMOINDIVIDUAL .	] ifFalse: [ 		retorno := ( ((unaSolicitud getMonto ) asString) asInteger ) <= ((unPostulante getPuntos) * MAXIMOPESOS ).	].	^ retorno .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/13/2024 19:17'!inicializar	MAXIMOINDIVIDUAL := 70000.	MAXIMOPESOS := 5000000.	Postulaciones := OrderedCollection new.	datasetSolicitudes := DataSet new.	datasetSolicitudesVencidas := DataSet new.	postulantes := OrderedCollection new.	solicitudesVencidas := OrderedCollection new.	solicitudesVigentes := OrderedCollection new.	empresasSolicitantes := OrderedCollection new.	datasetSolicitudes setColeccion: solicitudesVigentes .	datasetSolicitudesVencidas setColeccion: solicitudesVencidas .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 2/28/2024 17:58'!getDatasetSolicitudes	datasetSolicitudes ifNil: [ 		datasetSolicitudes := DataSet new.		datasetSolicitudes setColeccion: solicitudesVigentes .		^ datasetSolicitudes .	].	^ datasetSolicitudes .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/15/2024 00:05'!getMaximoIndividual	^ MAXIMOINDIVIDUAL ! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/15/2024 00:05'!getMaximoPesos	^ MAXIMOPESOS .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/19/2024 00:35'!getPostulantes	postulantes ifNil: [ 		postulantes := OrderedCollection new.	]. 	^postulantes .! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:34'!rutinaVencidas 	(solicitudesVigentes  select:[:x | x getFechaVencimiento < (Date today)]) do:[ :each | 		solicitudesVencidas add: each.	].	solicitudesVencidas do:[:x|		solicitudesVigentes remove: x ifAbsent: []	.	].	postulantes do:[:p |		((p className = 'Empresa') | ( p className = 'EmpresaConvinada' )) ifTrue:[			p rutinaVencidas .			]		].	datasetSolicitudes changed.	datasetSolicitudesVencidas changed.! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/11/2024 21:49'!getPostulaciones	^ Postulaciones.! !!TrabajoAr class methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:25'!revalidarSolicitud: unaSolicitud	solicitudesVencidas  remove: unaSolicitud ifAbsent: [ nil ] .	solicitudesVigentes add: unaSolicitud .! !!TrabajoAr class methodsFor: 'initialization' stamp: 'francozuniga 2/21/2024 19:11'!setPostulante: unPostulante	postulantes isCollection ifTrue:  [		postulantes add: unPostulante .	]ifFalse: [ 		postulantes := OrderedCollection new.		postulantes add: unPostulante .	].! !!TrabajoAr class methodsFor: 'initialization' stamp: 'Anonymous 4/10/2024 15:58'!setMaximoPesos: unMaximo	MAXIMOPESOS := unMaximo asNumber .! !!TrabajoAr class methodsFor: 'initialization' stamp: 'Anonymous 4/10/2024 15:58'!setMaximoIndividual: unMaximoIndividual	MAXIMOINDIVIDUAL := unMaximoIndividual asNumber .! !!TrabajoAr class methodsFor: 'initialization' stamp: 'Anonymous 5/13/2024 19:23'!setEmpresaSolicitante: unaEmpresaSolicitante	empresasSolicitantes ifNil:  [ empresasSolicitantes := OrderedCollection new ].	empresasSolicitantes add: unaEmpresaSolicitante . ! !!TrabajoAr class methodsFor: 'adding' stamp: 'Anonymous 5/13/2024 19:18'!addEmpresaSolicitante: unaEmpresaSolicitante	empresasSolicitantes ifNil: [ empresasSolicitantes := OrderedCollection new ].	empresasSolicitantes add: unaEmpresaSolicitante .! !!TrabajoAr class methodsFor: 'adding' stamp: 'francozuniga 3/11/2024 00:17'!addPostulacion: unaPostulacion	Postulaciones isCollection ifFalse:  [		Postulaciones := OrderedCollection new.	]. 	Postulaciones add: unaPostulacion .! !!TrabajoAr class methodsFor: 'adding' stamp: 'Anonymous 3/24/2024 00:46'!addSolicitud: unaSolicitud	solicitudesVigentes isCollection ifFalse: [ 		solicitudesVigentes := OrderedCollection new.		 ].	solicitudesVigentes add: unaSolicitud.	datasetSolicitudes ifNotNil: [ 		datasetSolicitudes changed.		]. 			! !