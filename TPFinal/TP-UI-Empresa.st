BorderedMorph subclass: #AltaSolicitud	instanceVariableNames: 'UUID Descripcion Monto fechaVencimiento TipoSolicitud esProlongado Periodo FrecuenciaPago Producto Aptitudes controlador Empresa'	classVariableNames: ''	package: 'TP-UI-Empresa'!!AltaSolicitud methodsFor: 'initialization' stamp: 'francozuniga 3/9/2024 15:03'!setEmpresa: unaEmpresa 	Empresa := unaEmpresa .! !!AltaSolicitud methodsFor: 'initialization' stamp: 'francozuniga 3/9/2024 22:13'!setSolicitud: unControlador	|control solicitud|.	control := unControlador verificarSolicitudConDesccripcion: (Descripcion getText ) Monto: (Monto getText ) FechaVencimiento: (fechaVencimiento date) TipoSolicitud: (TipoSolicitud selectedItem asString) EsProlongado: (esProlongado selectedItem asString) Periodo: (Periodo selectedItem asString) Producto: (Producto getText) Aptitudes: (Aptitudes getText).		control ifTrue: [ 		solicitud	 := unControlador setSolicitudConDesccripcion: (Descripcion getText ) Monto: (Monto getText ) FechaVencimiento: (fechaVencimiento date) TipoSolicitud: (TipoSolicitud selectedItem asString) EsProlongado: (esProlongado selectedItem asString) Periodo: (Periodo selectedItem asString) Producto: (Producto getText) Aptitudes: (Aptitudes getText).		Empresa getEmpresaSolicitante addSolicitud: solicitud .		TrabajoAr getDatasetSolicitudes changed.		self delete.	].! !!AltaSolicitud methodsFor: 'initialization' stamp: 'francozuniga 3/9/2024 22:17'!initialize 	|lblDescripcion lblMonto lblFechaVencimiento lblTipoSolicitud lblPeriodo lblEsProlongado lblProducto lblAptitudes btnAgregar cancelar|.	super initialize.	self extent: 600@700.	self color: Color gray.		lblDescripcion := LabelMorph new.	lblDescripcion top: self top + 10.	lblDescripcion left: self left + 10.	lblDescripcion contents: 'Descripcion Solicitud:'.	self addMorph: lblDescripcion .		Descripcion := RubScrolledTextMorph new.	Descripcion extent: 280@50.	Descripcion top: lblDescripcion bottom + 10.	Descripcion left: self left + 10.	self addMorph: Descripcion .		lblMonto := LabelMorph new.	lblMonto contents: 'Monto:'.	lblMonto top: Descripcion bottom + 10.	lblMonto left: self left + 10.	self addMorph: lblMonto .		Monto := RubScrolledTextMorph new.	Monto width: 280.	Monto top: lblMonto bottom + 10.	Monto left: self left + 10.	self addMorph: Monto.		lblFechaVencimiento := LabelMorph new.	lblFechaVencimiento contents: 'Fecha Vencimiento:'.	lblFechaVencimiento top: Monto bottom + 10.	lblFechaVencimiento left: self left + 10.	self addMorph: lblFechaVencimiento .		fechaVencimiento  := CalendarMorph new.	fechaVencimiento date: Date today.	fechaVencimiento top: lblFechaVencimiento bottom + 10.	fechaVencimiento left: self left + 10.	self addMorph: fechaVencimiento.		lblTipoSolicitud := LabelMorph new.	lblTipoSolicitud contents: 'Tipo Solicitud:'.	lblTipoSolicitud top: fechaVencimiento bottom + 10.	lblTipoSolicitud left: self left + 10.	self addMorph: lblTipoSolicitud .		TipoSolicitud := DropListMorph new.	TipoSolicitud list: #('Trabajo' 'Servicio').	TipoSolicitud width: 280.	TipoSolicitud top: lblTipoSolicitud bottom + 10.	TipoSolicitud left: self left + 10.	self addMorph: TipoSolicitud .		lblEsProlongado := LabelMorph new.	lblEsProlongado contents: 'Â¿Es un Servicio Pronlongado?(Servicio)'.	lblEsProlongado top: TipoSolicitud bottom + 10.	lblEsProlongado left: self left + 10.	lblEsProlongado width: 280.	self addMorph: lblEsProlongado .		esProlongado := DropListMorph new.	esProlongado width: 280.	esProlongado list: #('Si' 'No').	esProlongado top: lblEsProlongado bottom + 10.	esProlongado left: self left + 10.	self addMorph: esProlongado .		lblPeriodo := LabelMorph new.	lblPeriodo contents: 'Periodo Contratacion (Servicio):'.	lblPeriodo top: TipoSolicitud bottom + 10.	lblPeriodo left: esProlongado right  + 10.	self addMorph: lblPeriodo .			Periodo := DropListMorph new.	Periodo width: 280.	Periodo list: #('Unico' 'Diario' 'Semanal' 'Mensual' 'Semetral' 'Trimestral' 'Anual').	Periodo top: lblPeriodo bottom + 10.	Periodo left: esProlongado right  + 10.	self addMorph: Periodo .		lblProducto := LabelMorph new.	lblProducto contents: 'Producto (Servicio)'.	lblProducto top: esProlongado bottom + 10.	lblProducto left: self left + 10.	self addMorph: lblProducto .		Producto := RubScrolledTextMorph new.	Producto top: lblProducto bottom + 10.	Producto left: self left + 10.	Producto width: 280.	self addMorph: Producto.		lblAptitudes := LabelMorph new.	lblAptitudes contents: 'Aptitudes (Trabajo)'.	lblAptitudes top: Producto bottom + 20.	lblAptitudes left: self left + 10.	self addMorph: lblAptitudes .		Aptitudes := RubScrolledTextMorph new.	Aptitudes width: 280.	Aptitudes top: lblAptitudes bottom + 10.	Aptitudes left: self left +10.	self addMorph: Aptitudes .		cancelar := ButtonAction new.	cancelar label: 'Cancelar'.	cancelar top: Aptitudes bottom + 10.	cancelar left: self left + 10.	cancelar mouseAction: [ self delete ].	self addMorph: cancelar .		controlador := AltaSolicitudController new.	btnAgregar := ButtonAction new.	btnAgregar label: 'Agregar Solicitud'.	btnAgregar top: Aptitudes bottom + 10.	btnAgregar left: cancelar right + 10.	btnAgregar mouseAction: [ 		self setSolicitud: controlador .	].	self addMorph: btnAgregar .! !Object subclass: #AltaSolicitudController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!AltaSolicitudController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/31/2024 14:17'!verificarSolicitudConDesccripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento TipoSolicitud: unTipoSolicitud EsProlongado: esProlongado Periodo: unPeriodo Producto: unProducto Aptitudes: unasAptitudes	|retorno mensaje dialogo|.	retorno := true.	mensaje := ''.		 (unaDescripcion isNotEmpty ) ifFalse:  [ 		mensaje := mensaje , 'Ingrese una Descripcion.', String cr.		retorno := false.	 ].	(unMonto isNotEmpty ) ifFalse: [ 		mensaje := mensaje , 'Ingrese un Monto.', String cr.		retorno := false.	 ].	(unaFechaVencimiento isNotNil ) ifFalse: [ 		mensaje := mensaje , 'Ingrese una Fecha.', String cr.		retorno := false.	].	(unaFechaVencimiento isAfter:( Date today)) ifFalse: [ 		mensaje := mensaje , 'Ingrese una fecha superior a la de hoy.', String cr.		retorno := false.	].	(unTipoSolicitud ) ifNil: [ 		mensaje := mensaje , 'Seleccione un tipo de solicitud.', String cr.		retorno := false.	].		(unTipoSolicitud = 'Trabajo') ifTrue: [ 		"verificamos que tengamos las actitudes."			unasAptitudes ifEmpty:  [ 			mensaje := mensaje , 'Ingrese las Aptitudes para la solicitud de trabajo', String cr.			retorno := false.		].	 ] ifFalse: [ 		esProlongado ifNil: [ 			mensaje := mensaje , 'Tiene que indicar si el servicio es prolongado o no', String cr.			retorno := false.		] ifNotNil: [			(esProlongado = 'Si') ifTrue: [ 				unPeriodo ifNil: [ 					mensaje := mensaje , 'Tiene que seleccionar un periodo de Contratacion.', String cr.					retorno := false.				].							].		].	 ].	retorno ifFalse: [ 		dialogo := ErrorDialogWindow new.		dialogo text: mensaje.		dialogo openInWorld .	].	^ retorno.! !!AltaSolicitudController methodsFor: 'initialization' stamp: 'francozuniga 3/9/2024 21:16'!setSolicitudConDesccripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento TipoSolicitud: unTipoSolicitud EsProlongado: esProlongado Periodo: unPeriodo Producto: unProducto Aptitudes: unasAptitudes	|solicitud|.	"realiamos la comprobacion del tipo de solicitud."		unTipoSolicitud = 'Trabajo' ifTrue:  [		solicitud := SolicitudTrabajo new.		solicitud setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento Aptitudes: unasAptitudes .	]ifFalse:[		solicitud := SolicitudServicio new.		solicitud setDescripcion: unaDescripcion Monto: unMonto FechaVencimiento: unaFechaVencimiento EsProlongado: esProlongado Periodo: unPeriodo Producto: unProducto.	] .	TrabajoAr addSolicitud: solicitud.	^ solicitud .	! !BorderedMorph subclass: #ListaPostulatesASolicitud	instanceVariableNames: 'tabla dataset controler lblDescripcion lblMonto lblTipo lblFechaVencimiento'	classVariableNames: ''	package: 'TP-UI-Empresa'!!ListaPostulatesASolicitud methodsFor: 'initialization' stamp: 'Anonymous 3/21/2024 00:11'!setSolicitud: solicitud	| data postulantes LabelDescripcion LabelMonto LabelFechaVencimiento controlador|	data := TrabajoAr getPostulaciones select: [ :x |		        x getSolicitud = solicitud ].	postulantes := OrderedCollection new.	data do: [ :x | postulantes add: x getPostulante ].	dataset := DataSet new.	dataset setColeccion: postulantes.		tabla setDataset: dataset.		LabelDescripcion := LabelMorph new.	LabelDescripcion		top: lblDescripcion top;		left: lblDescripcion right + 10;		contents: solicitud getDescription.			LabelMonto := LabelMorph new.	LabelMonto		top: lblMonto top;		left: lblMonto right + 10;		contents: solicitud getMonto.			LabelFechaVencimiento := LabelMorph new.	LabelFechaVencimiento		top: lblFechaVencimiento top;		left: lblFechaVencimiento right + 10;		contents: solicitud getFechaVencimiento ddmmyyyy.	self		addMorph: LabelDescripcion;		addMorph: LabelMonto;		addMorph: LabelFechaVencimiento.			(solicitud estaAsignada ) ifFalse:[		controlador := ListaPostulatesASolicitudController new.		tabla setAccionWithName: 'Aceptar' action: [ :x |			|index object|.			index := x at: 'id'.			object := (x at: 'dataset') getCollection at: index .						self aceptarPostulacionDeSolicitud: solicitud DePostulante: object usandoControlador:controlador .		] .	].	dataset changed.! !!ListaPostulatesASolicitud methodsFor: 'initialization' stamp: 'Anonymous 3/20/2024 19:41'!initialize	|btnSalir scroll tablaHeader datasetHeader colectionHeader segundaColection|.	super initialize.			self extent: 820@380.	self color: Color gray.		btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left +10.	btnSalir mouseAction: [ 		self delete.	 ].	lblDescripcion := LabelMorph new.	lblDescripcion top: btnSalir bottom + 10.	lblDescripcion left: self left + 10.	lblDescripcion contents: 'Descripcion: '.	lblMonto := LabelMorph new.	lblMonto top: lblDescripcion bottom + 10.	lblMonto left: self left + 10.	lblMonto contents: 'Monto: '.		lblFechaVencimiento := LabelMorph new.	lblFechaVencimiento top: lblMonto bottom + 10.	lblFechaVencimiento left: self left + 10.	lblFechaVencimiento contents: 'Fecha Vencimiento: '.		colectionHeader := OrderedCollection new.	colectionHeader add: 'Tipo Postulante' asString .	colectionHeader add: 'Nombre' asString.	colectionHeader add: 'CUIT/DNI' asString.	colectionHeader add: 'Aptitudes/Rubro' asString.	colectionHeader add: 'Tipo' asString.	colectionHeader add: 'Puntos' asString.	colectionHeader add: 'Empresa Solic.' asString.		segundaColection := OrderedCollection new.	segundaColection add: colectionHeader .		datasetHeader := DataSet new.	datasetHeader setColeccion: segundaColection.		tablaHeader := TablaAcciones new.	tablaHeader top: lblFechaVencimiento bottom + 10.	tablaHeader left: self left + 10.	tablaHeader extent: 680@20.	tablaHeader setDataset: datasetHeader .	tablaHeader color: Color transparent  .		scroll := ScrollPane new.	scroll extent: 800@200.	scroll top: tablaHeader bottom + 10.	scroll left: self left + 10.		tabla := TablaAcciones new.	tabla color: Color gray.		scroll scroller addMorph: tabla.		self addMorph: scroll.	self addMorph: btnSalir .	self addMorph: lblDescripcion .	self addMorph: lblMonto .	self addMorph: lblFechaVencimiento  .	self addMorph: tablaHeader.	datasetHeader changed.! !!ListaPostulatesASolicitud methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/21/2024 00:10'!aceptarPostulacionDeSolicitud: unaSolicitud DePostulante: unPostulante usandoControlador: unControlador	|retorno|.	retorno := unControlador aceptarPostulacionDeSolicitud: unaSolicitud DePostulante: unPostulante.	retorno ifTrue: [		self delete.	]. ! !Object subclass: #ListaPostulatesASolicitudController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!ListaPostulatesASolicitudController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/21/2024 00:12'!aceptarPostulacionDeSolicitud: unaSolicitud DePostulante: unPostulante	"Buscamos la postulacion con la solicitud y el postulante"	|postulacion retorno|.	postulacion := (TrabajoAr  getPostulaciones ) detect: [ :x | (x getPostulante = unPostulante ) & (x getSolicitud = unaSolicitud ) ] ifNone: nil.	postulacion ifNotNil: [ 		"le asignamos la solicitud al postulante"		postulacion getSolicitud asignar: unPostulante.		"aprobamos la postulacion"		postulacion aprobar.		"avisamos que esta toto ok"		((MessageDialogWindow new) text: 'Se a asignado a el postulante para la solicitud') openInWorld.				retorno := true.	] ifNil:[		( ErrorDialogWindow new text: 'No se encontro la postulacion de la solicitud y postulante proporcionados.') openInWorld.		retorno := false.	]. 	^ retorno .	! !BorderedMorph subclass: #PostulantesASolicitud	instanceVariableNames: 'empresaSolicitante tabla dataset controlador'	classVariableNames: ''	package: 'TP-UI-Empresa'!!PostulantesASolicitud methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 19:17'!verPostulaciones: unaSolicitud Controlador: unControlador	unControlador verPostulaciones: unaSolicitud.! !!PostulantesASolicitud methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 15:19'!verPostulaciones: unControlador! !!PostulantesASolicitud methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:42'!initialize	|btnCerrar scrollPane|.	super initialize .	self extent: 600@300.	self color: Color gray .		btnCerrar := ButtonAction new.	btnCerrar top: self top + 10.	btnCerrar left: self left + 10.	btnCerrar label: 'Salir'.	btnCerrar mouseAction: [ 		self delete.	 ].	self addMorph: btnCerrar .		scrollPane := ScrollPane new.	scrollPane extent: 580@250.	scrollPane top: btnCerrar bottom + 10.	scrollPane left: self left + 10.		self addMorph: scrollPane .		tabla := TablaAcciones new.	tabla color: Color gray.	scrollPane scroller addMorph: tabla.! !!PostulantesASolicitud methodsFor: 'initialization' stamp: 'francozuniga 3/16/2024 19:17'!setEmpresaSolicitante: unaEmpresaSolicitante	|data|.		data := (unaEmpresaSolicitante getSolicitudes).		dataset := DataSet new.	dataset setColeccion: data.		empresaSolicitante := unaEmpresaSolicitante .		controlador := PostulantesASolicitudCotroller new.		"agregamos la accion luego."	tabla setAccionWithName: 'Postulantes' action: [ :x |		|index object|.		index := x at: 'id'.		object := (x at: 'dataset') getCollection at: index .		"tenemos el objeto que sera la solicitud"		self verPostulaciones: object Controlador: controlador .	].	tabla setDataset: dataset.	dataset changed.! !Object subclass: #PostulantesASolicitudCotroller	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!PostulantesASolicitudCotroller methodsFor: 'as yet unclassified' stamp: 'francozuniga 3/16/2024 19:16'!verPostulaciones: unaSolicitud	((ListaPostulatesASolicitud new) setSolicitud: unaSolicitud ) openInWorld .! !BorderedMorph subclass: #RevalidarSolicitudesServicios	instanceVariableNames: 'empresa solicitud calendar dataset LabelDescripcion LabelMonto LabelFechaVencimiento LabelEsProlongado LabelPeriodo LabelProducto'	classVariableNames: ''	package: 'TP-UI-Empresa'!!RevalidarSolicitudesServicios methodsFor: 'initialization' stamp: 'Anonymous 4/6/2024 23:39'!setSolicitud: unaSolicitud deEmpresa: unaEmpresa dataset: unDataset	|lblDescripcion lblFechaVencimiento lblMonto lblEsPrlongado lblPeriodo lblProducto|.	dataset := unDataset .		lblDescripcion := LabelMorph new.	lblDescripcion contents: unaSolicitud getDescription .	lblDescripcion top: LabelDescripcion top.	lblDescripcion left: LabelDescripcion right + 10.		lblFechaVencimiento := LabelMorph new.	lblFechaVencimiento contents: unaSolicitud getFechaVencimiento ddmmyyyy .	lblFechaVencimiento top: LabelFechaVencimiento top.	lblFechaVencimiento left: LabelFechaVencimiento right + 10.		lblMonto := LabelMorph new.	lblMonto contents: '$. ', unaSolicitud getMonto asString.	lblMonto top: LabelMonto top.	lblMonto left: LabelMonto right + 10.		lblEsPrlongado := LabelMorph new.	lblEsPrlongado contents: unaSolicitud EsProlongado asString .	lblEsPrlongado top: LabelEsProlongado  top.	lblEsPrlongado left: LabelEsProlongado right + 10.		unaSolicitud EsProlongado = 'Si' ifTrue:[		lblPeriodo := LabelMorph new.		lblPeriodo contents: unaSolicitud getFrecuenciaPago.		lblPeriodo top: LabelPeriodo top.		lblPeriodo left: LabelPeriodo right + 10.		 self addMorph: lblPeriodo .	].		unaSolicitud getProducto ifNotNil:[		lblProducto := LabelMorph new.		lblProducto contents: unaSolicitud getProducto.		lblProducto top: LabelProducto top.		lblProducto left: LabelProducto right + 10.		self addMorph: lblProducto .	].		self addMorph: lblDescripcion .	self addMorph: lblMonto .	self addMorph: lblFechaVencimiento .	self addMorph: lblEsPrlongado.	empresa := unaEmpresa .	solicitud := unaSolicitud .! !!RevalidarSolicitudesServicios methodsFor: 'initialization' stamp: 'Anonymous 4/6/2024 23:40'!initialize	|btnRevalidar btnSalir controller|	super initialize .	self color: Color gray.	self extent: 300@420.	btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self delete.	].		LabelDescripcion := LabelMorph new.	LabelDescripcion contents: 'Descripcion:'.	LabelDescripcion top: btnSalir bottom + 10.	LabelDescripcion left: self left + 10.		LabelFechaVencimiento := LabelMorph new.	LabelFechaVencimiento contents: 'Fecha Vencimmiento:'.	LabelFechaVencimiento top: LabelDescripcion bottom + 10.	LabelFechaVencimiento left: self left + 10.		LabelMonto := LabelMorph new.	LabelMonto contents: 'Monto:'.	LabelMonto top: LabelFechaVencimiento bottom + 10.	LabelMonto left: self left + 10.		LabelEsProlongado := LabelMorph new.	LabelEsProlongado contents: 'Es Prolongado?:'.	LabelEsProlongado top: LabelMonto bottom +10.	LabelEsProlongado left: self left +10.		LabelPeriodo := LabelMorph new.	LabelPeriodo contents: 'Periodo:'.	LabelPeriodo top: LabelEsProlongado bottom + 10.	LabelPeriodo left: self left + 10.		LabelProducto := LabelMorph new.	LabelProducto contents: 'Producto:'.	LabelProducto top: LabelPeriodo bottom + 10.	LabelProducto left: self left + 10.			calendar := CalendarMorph new.	calendar date: (Date today).	calendar top: LabelProducto bottom + 10.	calendar left: self left +10.		controller := RevalidarSolicitudesServiciosController new.		btnRevalidar := ButtonAction new.	btnRevalidar label: 'Revalidar solicitud'.	btnRevalidar top: calendar bottom + 10.	btnRevalidar left: self left + 10.	btnRevalidar mouseAction: [  		self revalidarSolicitud: controller.		].		self addMorph: btnSalir .	self addMorph: LabelDescripcion .	self addMorph: LabelMonto .	self addMorph: LabelFechaVencimiento .	self addMorph: LabelEsProlongado .	self addMorph: LabelPeriodo.	self addMorph: LabelProducto .	self addMorph: calendar.	self addMorph: btnRevalidar .	! !!RevalidarSolicitudesServicios methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:51'!revalidarSolicitud: unControlador	(unControlador validarRevalidacionConSolicitud: solicitud unaFechaVenciminetoNueva: (calendar date) ) ifTrue:[		unControlador revalidarSolicitud: solicitud deEmpresa: empresa.		dataset changed.		solicitud setFechaVencimiento: (calendar date).		self delete.	].! !Object subclass: #RevalidarSolicitudesServiciosController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!RevalidarSolicitudesServiciosController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 23:16'!revalidarSolicitud: unaSolicitud deEmpresa: unaEmpresa	unaEmpresa revalidarSolicitud: unaSolicitud .! !!RevalidarSolicitudesServiciosController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 23:15'!validarRevalidacionConSolicitud: unaSolicitud unaFechaVenciminetoNueva: unaFechaVencimiento	|mensaje retorno|.	mensaje := ''.	retorno := true.		(unaFechaVencimiento <= (Date today)) ifTrue:[ 		retorno := false.		mensaje := 'La fecha de vencimiento tiene que ser mayor a la fecha actual.'		]. 		retorno ifFalse:[		(ErrorDialogWindow new text: mensaje) openInWorld.		]. 	^retorno .! !BorderedMorph subclass: #RevalidarSolicitudesTrabajo	instanceVariableNames: 'empresa solicitud dataset calendar LabelDescripcion LabelFechaVencimiento LabelMonto LabelAptitudes'	classVariableNames: ''	package: 'TP-UI-Empresa'!!RevalidarSolicitudesTrabajo methodsFor: 'initialization' stamp: 'Anonymous 4/6/2024 23:45'!setSolicitud: unaSolicitud deEmpresa: unaEmpresa dataset: unDataset	|lblDescripcion lblFechaVencimiento lblMonto lblAptitudes|.	dataset := unDataset .	lblDescripcion := LabelMorph new.	lblDescripcion contents: unaSolicitud getDescription .	lblDescripcion top: LabelDescripcion top.	lblDescripcion left: LabelDescripcion right + 10.		lblFechaVencimiento := LabelMorph new.	lblFechaVencimiento contents: unaSolicitud getFechaVencimiento ddmmyyyy .	lblFechaVencimiento top: LabelFechaVencimiento top.	lblFechaVencimiento left: LabelFechaVencimiento right + 10.		lblMonto := LabelMorph new.	lblMonto contents: '$. ', unaSolicitud getMonto asString.	lblMonto top: LabelMonto top.	lblMonto left: LabelMonto right + 10.		lblAptitudes := LabelMorph new.	lblAptitudes contents: unaSolicitud getAptitudes .	lblAptitudes top: LabelAptitudes top.	lblAptitudes left: LabelAptitudes right + 10.		self addMorph: lblDescripcion .	self addMorph: lblMonto .	self addMorph: lblFechaVencimiento .	self addMorph: lblAptitudes .	empresa := unaEmpresa .	solicitud := unaSolicitud .! !!RevalidarSolicitudesTrabajo methodsFor: 'initialization' stamp: 'Anonymous 3/25/2024 23:02'!initialize	|btnRevalidar btnSalir controlador| 	super initialize .	self color: Color gray.	self extent: 300@400.	btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self delete.	].		LabelDescripcion := LabelMorph new.	LabelDescripcion contents: 'Descripcion:'.	LabelDescripcion top: btnSalir bottom + 10.	LabelDescripcion left: self left + 10.		LabelFechaVencimiento := LabelMorph new.	LabelFechaVencimiento contents: 'Fecha Vencimmiento:'.	LabelFechaVencimiento top: LabelDescripcion bottom + 10.	LabelFechaVencimiento left: self left + 10.		LabelMonto := LabelMorph new.	LabelMonto contents: 'Monto:'.	LabelMonto top: LabelFechaVencimiento bottom + 10.	LabelMonto left: self left + 10.		LabelAptitudes := LabelMorph new.	LabelAptitudes contents: 'Aptitudes:'.	LabelAptitudes top: LabelMonto bottom +10.	LabelAptitudes left: self left +10.		calendar := CalendarMorph new.	calendar date: (Date today).	calendar top: LabelAptitudes bottom + 10.	calendar left: self left +10.		controlador := RevalidarSolicitudesTrabajoController new.		btnRevalidar := ButtonAction new.	btnRevalidar label: 'Revalidar solicitud'.	btnRevalidar top: calendar bottom + 10.	btnRevalidar left: self left + 10.	btnRevalidar mouseAction: [ 		self revalidarSolicitud: controlador .		 ].		self addMorph: btnSalir .	self addMorph: LabelDescripcion .	self addMorph: LabelMonto .	self addMorph: LabelFechaVencimiento .	self addMorph: LabelAptitudes .	self addMorph: btnRevalidar .	self addMorph: calendar.	! !!RevalidarSolicitudesTrabajo methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:51'!revalidarSolicitud: unControlador	(unControlador validarRevalidacionConSolicitud: solicitud unaFechaVenciminetoNueva: (calendar date) ) ifTrue:[		unControlador revalidarSolicitud: solicitud deEmpresa: empresa.		dataset changed.		solicitud setFechaVencimiento: (calendar date).		self delete.	].! !Object subclass: #RevalidarSolicitudesTrabajoController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!RevalidarSolicitudesTrabajoController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 22:53'!revalidarSolicitud: unaSolicitud deEmpresa: unaEmpresa	unaEmpresa revalidarSolicitud: unaSolicitud .! !!RevalidarSolicitudesTrabajoController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 22:48'!validarRevalidacionConSolicitud: unaSolicitud unaFechaVenciminetoNueva: unaFechaVencimiento	|mensaje retorno|.	mensaje := ''.	retorno := true.		(unaFechaVencimiento <= (Date today)) ifTrue:[ 		retorno := false.		mensaje := 'La fecha de vencimiento tiene que ser mayor a la fecha actual.'		]. 		retorno ifFalse:[		(ErrorDialogWindow new text: mensaje) openInWorld.		]. 	^retorno .! !BorderedMorph subclass: #TablaSolicitudes	instanceVariableNames: 'dataset postulante calendarInicio calendarFin'	classVariableNames: ''	package: 'TP-UI-Empresa'!!TablaSolicitudes methodsFor: 'initialization' stamp: 'francozuniga 3/10/2024 17:15'!setPostulante: unPostulante	postulante := unPostulante.! !!TablaSolicitudes methodsFor: 'initialization' stamp: 'Anonymous 3/31/2024 17:06'!initialize	|tabla scroll btnSalir btnFiltrar|.	super initialize.	self color: Color gray.		btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self delete.		].			calendarInicio := CalendarMorph new.	calendarInicio date: Date today.	calendarInicio top: btnSalir bottom + 10.	calendarInicio left: self left + 10.		calendarFin := CalendarMorph new.	calendarFin date: Date today.	calendarFin top: btnSalir bottom + 10.	calendarFin left: calendarInicio right + 10.		btnFiltrar := ButtonAction new.	btnFiltrar label: 'Filtrar Solicitudes'.	btnFiltrar top: calendarInicio bottom + 10.	btnFiltrar left: self left + 10.	btnFiltrar mouseAction: [ 		self filtrar.	 ].		dataset := DataSet new.	dataset setColeccion: (TrabajoAr getDatasetSolicitudes getCollection ).		tabla := TablaAcciones new.	tabla setDataset: dataset .	tabla setAccionWithName: 'Postular' action: [ :x | 		|index object|.		index := x at: 'id'.		object := (x at: 'dataset') getCollection at: index .				self nuevaPostulacionConSolicitud: object.	].	TrabajoAr getDatasetSolicitudes changed.		tabla color: Color gray.	self extent: 800@600.	scroll := ScrollPane new.	scroll extent: 780@300.	scroll top: btnFiltrar bottom + 10.	scroll left: self left + 10.		scroll scroller addMorph: tabla.	self addMorph: scroll.	self addMorph: btnSalir .	self addMorph: calendarInicio .	self addMorph: calendarFin .	self addMorph: btnFiltrar .	dataset changed.		""	TrabajoAr getDatasetSolicitudes addDependent: self.! !!TablaSolicitudes methodsFor: 'updating' stamp: 'Anonymous 3/31/2024 15:51'!update: aObject	"reiniciar todos los filtros"	dataset setColeccion: (TrabajoAr getDatasetSolicitudes getCollection ).	dataset changed.		calendarInicio date: Date today.	calendarFin date: Date today.! !!TablaSolicitudes methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/28/2024 23:43'!filtrar	"filtramos los datos "	dataset setColeccion: (		TrabajoAr getDatasetSolicitudes getCollection select: [ :x | (x getFechaCreacion isAfter: (calendarInicio date)) & (x getFechaCreacion isBefore: (calendarFin date))  ]	).	dataset changed.! !!TablaSolicitudes methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/20/2024 18:15'!nuevaPostulacionConSolicitud: solicitud	solicitud className = 'SolicitudServicio'		ifTrue: [			(PostularSolicitudServicio new				 setSolicitud: solicitud 				 YPostulante: postulante) openInWorld ]		ifFalse: [			(PostularSolicitudTrabajo new setSolicitud: solicitud YPostulante: postulante)				openInWorld ]! !Object subclass: #TablaSolicitudesController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!TablaSolicitudesController methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/27/2024 19:23'!filtrarDeFechaDesde: unaFechaDesde aFechaHasta: unaFechaHasta	^ (TrabajoAr getDatasetSolicitudes getColection select: [ :x |		(x getFechaCreacion >= unaFechaDesde ) & (x getFechaCreacion <= unaFechaHasta ). 	 ]).! !!TablaSolicitudesController methodsFor: 'initialization' stamp: 'Anonymous 3/29/2024 02:03'!initialize 	super initialize .	! !BorderedMorph subclass: #TablaSolicitudesVencidas	instanceVariableNames: 'empresa dataset tabla calendarInicio calendarFin'	classVariableNames: ''	package: 'TP-UI-Empresa'!!TablaSolicitudesVencidas methodsFor: 'as yet unclassified' stamp: 'Anonymous 3/25/2024 18:53'!cerrar	self delete.! !!TablaSolicitudesVencidas methodsFor: 'as yet unclassified' stamp: 'Anonymous 4/6/2024 23:44'!revalidarSolicitud: object paraEmpresa: unaEmpresa usando: unControlador	unControlador revalidarSolicitud:  object paraEmpresa: unaEmpresa dataset: dataset .! !!TablaSolicitudesVencidas methodsFor: 'initialization' stamp: 'Anonymous 3/25/2024 22:08'!setEmpresa: unaEmpresa	|controlador|.	empresa := unaEmpresa.		dataset setColeccion: (unaEmpresa getSolicitudesVencidas).		controlador := TablaSolicitudesVencidasController new.		tabla setAccionWithName:  'Revalidar' action:[:x | 		|index object|.		index := x at: 'id'.		object := (x at: 'dataset') getCollection at: index .		self revalidarSolicitud: object paraEmpresa: unaEmpresa usando: controlador .	].	dataset changed.	! !!TablaSolicitudesVencidas methodsFor: 'initialization' stamp: 'Anonymous 4/2/2024 19:20'!initialize	|scroll btnSalir|.	super initialize.	"seteamos los valores para la clase de tabla de solicitudes vencidas"	self extent: 600@300.	self color: Color gray.		btnSalir := ButtonAction new.	btnSalir label: 'Salir'.	btnSalir top: self top + 10.	btnSalir left: self left + 10.	btnSalir mouseAction: [ 		self delete.	].			scroll := ScrollPane new.	scroll extent: 580@250.	scroll top: btnSalir bottom + 10.	scroll left: self left + 10.		dataset := DataSet new.		tabla := TablaAcciones new.	tabla setDataset: dataset .	scroll scroller addMorph: tabla.		self addMorph: btnSalir .	self addMorph: 	scroll.! !Object subclass: #TablaSolicitudesVencidasController	instanceVariableNames: ''	classVariableNames: ''	package: 'TP-UI-Empresa'!!TablaSolicitudesVencidasController methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:47'!revalidarSolicitud: unaSolicitud paraEmpresa: unaEmpresa	(unaSolicitud esSolicitudTrabajo ) ifTrue:[		(RevalidarSolicitudesTrabajo new setSolicitud: unaSolicitud deEmpresa: unaEmpresa) openInWorld .	] ifFalse:[		(RevalidarSolicitudesServicios new setSolicitud: unaSolicitud  deEmpresa: unaEmpresa ) openInWorld.	].! !!TablaSolicitudesVencidasController methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/8/2024 22:21'!revalidarSolicitud: unaSolicitud paraEmpresa: unaEmpresa dataset: unDataset	(unaSolicitud esSolicitudTrabajo ) ifTrue:[		(RevalidarSolicitudesTrabajo new setSolicitud: unaSolicitud deEmpresa: unaEmpresa dataset: unDataset) openInWorld .	] ifFalse:[		(RevalidarSolicitudesServicios new setSolicitud: unaSolicitud  deEmpresa: unaEmpresa dataset: unDataset) openInWorld.	].! !